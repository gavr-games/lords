{"version":3,"sources":["webpack:///webpack/bootstrap 7ecece8f2d95d10deac1","webpack:///./src/app.js","webpack:///./src/wsclient.js","webpack:///./src/phoenix.js"],"names":["window","WSClient","channels","socket","connected","debug","user_id","game_id","wsUrl","location","hostname","includes","Socket","params","token","Cookie","read","console","log","connect","disconnect","chatId","joinChannel","gameId","msg","channelName","push","sendJSONtoChannel","cmd","self","jQuery","get","data","JSON","decode","sendLoggedProtocolCmd","encode","json_params","channel","on","split","payload","from_user_id","decodeURIComponent","replace","current_window","contentWindow","chat_add_user_message","time","handleProtocolRawMessage","recieve_cmds","exec_commands_now","ws_exec_cmds","commands","showHint","wasError","DEBUG_MODE","last_commands","last_commands_i","no_backlight","commands_executing","eval","after_commands","anim_is_running","post_move_anims","after_commands_anims","e","displayLordsError","last_executed_procedure","last_executed_api","convertFromChars","initialization","show_stats","code","toInt","setTimeout","load_window","showError","value","join","receive","resp","typeOf","fade","leave","$","s","escaped_one_to_xml_special_map","str","item","VSN","SOCKET_STATES","connecting","open","closing","closed","DEFAULT_TIMEOUT","WS_CLOSE_NORMAL","CHANNEL_STATES","errored","joined","joining","leaving","CHANNEL_EVENTS","close","error","reply","CHANNEL_LIFECYCLE_EVENTS","TRANSPORTS","longpoll","websocket","Push","event","timeout","receivedResp","timeoutTimer","recHooks","sent","reset","send","hasReceived","startTimeout","topic","ref","join_ref","joinRef","status","callback","response","cancelRefEvent","refEvent","filter","h","forEach","off","clearTimeout","cancelTimeout","makeRef","replyEventName","matchReceive","trigger","Channel","state","bindings","joinedOnce","joinPush","pushBuffer","rejoinTimer","Timer","rejoinUntilConnected","reconnectAfterMs","pushEvent","onClose","remove","onError","isLeaving","isClosed","reason","scheduleTimeout","isJoining","leavePush","isConnected","rejoin","bind","isJoined","canPush","isLifecycleEvent","indexOf","resend","sendJoin","handledPayload","onMessage","map","Serializer","stringify","rawPayload","parse","endPoint","opts","stateChangeCallbacks","message","sendBuffer","transport","WebSocket","LongPoll","defaultEncoder","defaultDecoder","heartbeatIntervalMs","tries","logger","longpollerTimeout","heartbeatTimer","pendingHeartbeatRef","reconnectTimer","protocol","match","uri","Ajax","appendParams","vsn","charAt","host","conn","onclose","endPointURL","onopen","onConnOpen","onerror","onConnError","onmessage","onConnMessage","onConnClose","kind","flushSendBuffer","skipHeartbeat","clearInterval","setInterval","sendHeartbeat","triggerChanError","readyState","connectionState","c","chanParams","chan","result","newRef","toString","length","rawMessage","isMember","pollEndpoint","normalizeEndpoint","poll","RegExp","closeAndRetry","request","endpointURL","ontimeout","messages","body","method","accept","XDomainRequest","req","xdomainRequest","XMLHttpRequest","ActiveXObject","xhrRequest","onload","parseJSON","responseText","onprogress","setRequestHeader","onreadystatechange","states","complete","obj","parentKey","queryStr","key","hasOwnProperty","paramKey","paramVal","serialize","encodeURIComponent","url","Object","keys","prefix","Presence","syncState","currentState","newState","onJoin","onLeave","clone","joins","leaves","presence","newPresence","currentPresence","newRefs","metas","m","phx_ref","curRefs","joinedMetas","leftMetas","syncDiff","unshift","leftPresence","refsToRemove","p","list","presences","chooser","pres","func","getOwnPropertyNames","timerCalc","timer"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA;;AACAA,QAAOC,QAAP,GAAkB,IAAIA,kBAAJ,EAAlB,C;;;;;;ACDA;;;;;;;;;AACA;;;;KAIaA,Q,WAAAA,Q;AACT,yBAAc;AAAA;;AACV,cAAKC,QAAL,GAAgB,EAAhB;AACA,cAAKC,MAAL,GAAc,IAAd;AACA,cAAKC,SAAL,GAAiB,KAAjB;AACA,cAAKC,KAAL,GAAa,IAAb;AACA,cAAKC,OAAL,GAAe,IAAf;AACA,cAAKC,OAAL,GAAe,IAAf;AACH;;;;mCACS;AACN,iBAAIC,QAAQ,UAAUR,OAAOS,QAAP,CAAgBC,QAA1B,GAAqC,SAAjD;AACA,iBAAIF,MAAMG,QAAN,CAAe,aAAf,CAAJ,EAAmC;AAC/BH,yBAAQ,UAAUR,OAAOS,QAAP,CAAgBC,QAA1B,GAAqC,cAA7C;AACH;AACD,kBAAKP,MAAL,GAAc,IAAIS,eAAJ,CAAWJ,KAAX,EAAkB;AAC5BK,yBAAQ;AACJC,4BAAOC,OAAOC,IAAP,CAAY,WAAZ;AADH;AADoB,cAAlB,CAAd;AAKA,iBAAI,KAAKX,KAAT,EAAgB;AACZY,yBAAQC,GAAR,CAAY,mBAAZ;AACH;AACD,kBAAKf,MAAL,CAAYgB,OAAZ;AACA,kBAAKf,SAAL,GAAiB,IAAjB;AACH;;;sCACY;AACT,iBAAI,KAAKA,SAAT,EAAoB;AAChB,sBAAKD,MAAL,CAAYiB,UAAZ;AACA,sBAAKhB,SAAL,GAAiB,KAAjB;AACA,sBAAKE,OAAL,GAAe,IAAf;AACA,qBAAI,KAAKD,KAAT,EAAgB;AACZY,6BAAQC,GAAR,CAAY,cAAZ;AACH;AACJ;AACJ;;;kCAEQb,K,EAAO;AACZ,kBAAKA,KAAL,GAAaA,KAAb;AACH;;;kCAEQgB,M,EAAQ;AACb,kBAAKC,WAAL,CAAiB,UAAUD,MAA3B;AACH;;;qCACW;AACR,kBAAKC,WAAL,CAAiB,OAAjB;AACH;;;kCACQC,M,EAAQ;AACb,kBAAKD,WAAL,CAAiB,UAAUC,MAA3B;AACH;;;6CACmBjB,O,EAAS;AACzB,kBAAKgB,WAAL,CAAiB,UAAUhB,OAA3B;AACH;;;yCAEee,M,EAAQG,G,EAAK;AACzB,iBAAIC,cAAc,UAAUJ,MAA5B;AACA,kBAAKnB,QAAL,CAAcuB,WAAd,EAA2BC,IAA3B,CAAgC,SAAhC,EAA2C;AACvCF,sBAAKA;AADkC,cAA3C;AAGH;;;6CAEmBD,M,EAAQC,G,EAAK;AAC7B,iBAAIC,cAAc,UAAUF,MAA5B;AACA,kBAAKrB,QAAL,CAAcuB,WAAd,EAA2BC,IAA3B,CAAgC,SAAhC,EAA2C;AACvCF,sBAAKA;AADkC,cAA3C;AAGH;;;6CAEmBX,M,EAAQ;AACxB,kBAAKS,WAAL,CAAiB,MAAjB;AACA,kBAAKK,iBAAL,CAAuB,MAAvB,EAA+B,mBAA/B,EAAoDd,MAApD;AACH;;;+CAEqBA,M,EAAqC;AAAA,iBAA7Be,GAA6B,uEAAvB,qBAAuB;;AACvD,iBAAI,CAAC,KAAKtB,OAAV,EAAmB;AACf,qBAAIuB,OAAO,IAAX;AACAC,wBAAOC,GAAP,CAAW,iCAAX,EAA8C,UAASC,IAAT,EAAe;AACzDH,0BAAKvB,OAAL,GAAe2B,KAAKC,MAAL,CAAYF,IAAZ,EAAkB,SAAlB,CAAf;AACA,yBAAIP,cAAc,UAAUI,KAAKvB,OAAjC;AACAuB,0BAAKP,WAAL,CAAiBG,WAAjB;AACAI,0BAAKF,iBAAL,CAAuBF,WAAvB,EAAoCG,GAApC,EAAyCf,MAAzC;AACH,kBALD;AAMH,cARD,MAQO;AACH,sBAAKc,iBAAL,CAAuB,UAAU,KAAKrB,OAAtC,EAA+CsB,GAA/C,EAAoDf,MAApD;AACH;AACJ;;;6CAEmBA,M,EAAQ;AACxB,kBAAKsB,qBAAL,CAA2BtB,MAA3B,EAAmC,mBAAnC;AACH;;;yCAEeA,M,EAAQ;AACpB,kBAAKsB,qBAAL,CAA2BtB,MAA3B,EAAmC,aAAnC;AACH;;;2CAEiBY,W,EAAaG,G,EAAKf,M,EAAQ;AACxC,iBAAI,KAAKR,KAAT,EAAgB;AACZY,yBAAQC,GAAR,CAAY,UAAUe,KAAKG,MAAL,CAAYvB,MAAZ,CAAV,GAAgC,MAAhC,GAAyCY,WAArD;AACH;AACD,kBAAKvB,QAAL,CAAcuB,WAAd,EAA2BC,IAA3B,CAAgCE,GAAhC,EAAqC;AACjCS,8BAAaJ,KAAKG,MAAL,CAAYvB,MAAZ;AADoB,cAArC;AAGH;;;uCAEa;AACV,kBAAKsB,qBAAL,CAA2B,EAA3B,EAA+B,eAA/B;AACH;;;4CAEkB;AACf,kBAAKA,qBAAL,CAA2B,EAA3B,EAA+B,oBAA/B;AACH;;;qCAEWV,W,EAAa;AAAA;;AACrB,iBAAI,CAAC,KAAKrB,SAAV,EAAqB;AACjB,sBAAKe,OAAL;AACH;AACD,iBAAImB,UAAU,KAAKnC,MAAL,CAAYmC,OAAZ,CAAoBb,WAApB,EAAiC,EAAjC,CAAd;;AAEAa,qBAAQC,EAAR,CAAW,SAAX,EAAsB,mBAAW;AAC7B,qBAAIlB,SAASI,YAAYe,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAb;AACA,qBAAI,MAAKnC,KAAT,EAAgB;AACZY,6BAAQC,GAAR,CAAY,2BAA2BG,MAA3B,GAAoC,IAApC,GAA2CoB,QAAQC,YAAnD,GAAkE,IAAlE,GAAyEC,mBAAmBF,QAAQjB,GAA3B,EAAgCoB,OAAhC,CAAwC,KAAxC,EAA+C,EAA/C,EAAmDA,OAAnD,CAA2D,KAA3D,EAAkE,KAAlE,CAAzE,GAAoJ,GAAhK;AACH;AACD5C,wBAAO6C,cAAP,CAAsBC,aAAtB,CAAoCC,qBAApC,CAA0D1B,MAA1D,EAAkEoB,QAAQC,YAA1E,EAAwFD,QAAQO,IAAhG,EAAsGL,mBAAmBF,QAAQjB,GAA3B,EAAgCoB,OAAhC,CAAwC,KAAxC,EAA+C,EAA/C,EAAmDA,OAAnD,CAA2D,KAA3D,EAAkE,KAAlE,CAAtG;AACH,cAND;;AAQAN,qBAAQC,EAAR,CAAW,cAAX,EAA2B,mBAAW;AAClC,uBAAKU,wBAAL,CAA8BR,OAA9B;AACH,cAFD;;AAIAH,qBAAQC,EAAR,CAAW,UAAX,EAAuB,mBAAW;AAC9B,qBAAI,MAAKlC,KAAT,EAAgB;AACZY,6BAAQC,GAAR,CAAYuB,OAAZ;AACH;AACD,qBAAI,CAACS,YAAL,EACI,OAAO,CAAC,CAAR;AACJ,qBAAI,CAACC,iBAAL,EAAwB;AACpBC,qCAAgBT,mBAAmBF,QAAQY,QAA3B,CAAhB;AACA,4BAAO,CAAC,CAAR;AACH;AACDZ,yBAAQY,QAAR,GAAmBV,mBAAmBF,QAAQY,QAA3B,CAAnB;AACA;AACAZ,yBAAQY,QAAR,GAAmBZ,QAAQY,QAAR,CAAiBT,OAAjB,CAAyB,UAAzB,EAAqC,GAArC,EAA0CA,OAA1C,CAAkD,KAAlD,EAAyD,EAAzD,EAA6DA,OAA7D,CAAqE,KAArE,EAA4E,KAA5E,CAAnB;AACA;AACAU,4BAAW,KAAX;AACAC,4BAAW,KAAX;AACA,qBAAI;AACA,yBAAIC,UAAJ,EAAgB;AACZC,uCAAcC,eAAd,IAAiCjB,QAAQY,QAAzC;AACAK;AACA,6BAAIA,kBAAkB,CAAtB,EAAyBA,kBAAkB,CAAlB;AAC5B;AACDC,oCAAe,IAAf;AACAC,0CAAqB,IAArB;AACA3C,6BAAQC,GAAR,CAAYuB,QAAQY,QAApB;AACAQ,0BAAKpB,QAAQY,QAAb;AACAO,0CAAqB,KAArB;AACAD,oCAAe,KAAf;AACAG,uCAAkB,uCAAlB;AACA,yBAAIC,eAAJ,EAAqB;AACjBC,4CAAmBF,cAAnB;AACH,sBAFD,MAEO;AACHD,8BAAKC,cAAL;AACH;AACDD,0BAAKI,oBAAL;AACAH,sCAAiB,EAAjB;AACAG,4CAAuB,EAAvB;AACH,kBArBD,CAqBE,OAAOC,CAAP,EAAU;AACRX,gCAAW,IAAX;AACA,yBAAIC,UAAJ,EAAgB;AACZW,2CAAkBD,CAAlB,EAAqBzB,QAAQY,QAAR,GAAmBS,cAAnB,GAAoC,gCAApC,GAAuEM,uBAAvE,GAAiG,iBAAjG,GAAqHC,iBAA1I;AACH;AACJ;AACJ,cA3CD;;AA6CA/B,qBAAQC,EAAR,CAAW,eAAX,EAA4B,mBAAW;AACnC,qBAAIc,WAAW,MAAKiB,gBAAL,CAAsB7B,QAAQY,QAA9B,CAAf;AACA,qBAAI,MAAKhD,KAAT,EAAgB;AACZY,6BAAQC,GAAR,CAAYuB,OAAZ;AACH;AACD,qBAAI;AACAoB,0BAAKR,QAAL;AACAH,oCAAe,IAAf;AACAqB;AACH,kBAJD,CAIE,OAAOL,CAAP,EAAU;AACRX,gCAAW,IAAX;AACA,yBAAIC,UAAJ,EAAgB;AACZW,2CAAkBD,CAAlB,EAAqBb,WAAWS,cAAX,GAA4B,gCAA5B,GAA+DM,uBAA/D,GAAyF,iBAAzF,GAA6GC,iBAAlI;AACH;AACJ;AACJ,cAfD;;AAiBA/B,qBAAQC,EAAR,CAAW,oBAAX,EAAiC,mBAAW;AACxC,qBAAIc,WAAW,MAAKiB,gBAAL,CAAsB7B,QAAQY,QAA9B,CAAf;AACA,qBAAI,MAAKhD,KAAT,EAAgB;AACZY,6BAAQC,GAAR,CAAYmC,QAAZ;AACH;AACDmB,4BAAWnB,QAAX;AACH,cAND;;AAQAf,qBAAQC,EAAR,CAAW,KAAX,EAAkB,mBAAW;AACzB,yBAAQE,QAAQgC,IAAR,CAAaC,KAAb,EAAR;AACI,0BAAK,GAAL;AACI;AACJ,0BAAK,IAAL;AACIC,oCAAW,gCAAX,EAA6C,IAA7C;AACA;AACJ,0BAAK,IAAL;AACIC,qCAAY,gBAAZ,EAA8B,MAA9B,EAPR,CAO+C;AAC3C;AACIC,mCAAUpC,QAAQgC,IAAlB,EAAwBhC,QAAQqC,KAAhC;AATR;AAWH,cAZD;;AAcAxC,qBAAQyC,IAAR,GACKC,OADL,CACa,IADb,EACmB,gBAAQ;AACnB,qBAAI,MAAK3E,KAAT,EAAgB;AACZY,6BAAQC,GAAR,CAAY,yBAAyBO,WAArC,EAAkDwD,IAAlD;AACH;AACD,qBAAIC,OAAOrC,cAAP,KAA0B,MAA9B,EAAsC;AAClCA,oCAAesC,IAAf,CAAoB,CAApB;AACH;AACJ,cARL,EASKH,OATL,CASa,OATb,EASsB,gBAAQ;AACtB,qBAAI,MAAK3E,KAAT,EAAgB;AACZY,6BAAQC,GAAR,CAAY,oBAAoBO,WAAhC,EAA6CwD,IAA7C;AACH;AACJ,cAbL;;AAeA,kBAAK/E,QAAL,CAAcuB,WAAd,IAA6Ba,OAA7B;AACH;;;sCACYb,W,EAAa;AACtB,iBAAI,KAAKvB,QAAL,CAAcuB,WAAd,CAAJ,EAAgC;AAC5B,sBAAKvB,QAAL,CAAcuB,WAAd,EAA2B2D,KAA3B;AACA,sBAAKlF,QAAL,CAAcuB,WAAd,IAA6B,IAA7B;AACA,qBAAI,KAAKpB,KAAT,EAAgB;AACZY,6BAAQC,GAAR,CAAY,mBAAmBO,WAA/B;AACH;AACJ;AACJ;;;kDACwBgB,O,EAAS;AAC9B,iBAAI,KAAKpC,KAAT,EAAgB;AACZY,yBAAQC,GAAR,CAAYyB,mBAAmBF,QAAQY,QAA3B,CAAZ;AACH;AACD,iBAAIR,eAAeC,aAAf,CAA6BuC,CAAjC,EAAoC;AAChC,qBAAI;AACAxC,oCAAeC,aAAf,CAA6Be,IAA7B,CAAkClB,mBAAmBF,QAAQY,QAA3B,CAAlC;AACH,kBAFD,CAEE,OAAOa,CAAP,EAAU;AACRC,uCAAkBD,CAAlB,EAAqBvB,mBAAmBF,QAAQY,QAA3B,IAAuC,iBAAvC,GAA2DR,eAAeC,aAAf,CAA6BsB,uBAAxF,GAAkH,iBAAlH,GAAsIvB,eAAeC,aAAf,CAA6BuB,iBAAxL;AACH;AACJ;AACJ;;;0CAEgBiB,C,EAAG;AAChB,iBAAIC,iCAAiC;AACjC,0BAAS,GADwB;AAEjC,2BAAU,GAFuB;AAGjC,yBAAQ,GAHyB;AAIjC,yBAAQ,GAJyB;AAKjC,0BAAS,IALwB;AAMjC,2BAAU,IANuB;AAOjC,0BAAS;AAPwB,cAArC;AASA,oBAAOD,EAAE1C,OAAF,CAAU,8CAAV,EAA0D,UAAU4C,GAAV,EAAeC,IAAf,EAAqB;AAClF,wBAAOF,+BAA+BE,IAA/B,CAAP;AACH,cAFM,CAAP;AAGH;;;;;;;;;;;;;;;;;;;;;;;;;;AC9QL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqLA,KAAMC,MAAM,OAAZ;AACA,KAAMC,gBAAgB,EAACC,YAAY,CAAb,EAAgBC,MAAM,CAAtB,EAAyBC,SAAS,CAAlC,EAAqCC,QAAQ,CAA7C,EAAtB;AACA,KAAMC,kBAAkB,KAAxB;AACA,KAAMC,kBAAkB,IAAxB;AACA,KAAMC,iBAAiB;AACrBH,WAAQ,QADa;AAErBI,YAAS,SAFY;AAGrBC,WAAQ,QAHa;AAIrBC,YAAS,SAJY;AAKrBC,YAAS;AALY,EAAvB;AAOA,KAAMC,iBAAiB;AACrBC,UAAO,WADc;AAErBC,UAAO,WAFc;AAGrB1B,SAAM,UAHe;AAIrB2B,UAAO,WAJc;AAKrBtB,UAAO;AALc,EAAvB;AAOA,KAAMuB,2BAA2B,CAC/BJ,eAAeC,KADgB,EAE/BD,eAAeE,KAFgB,EAG/BF,eAAexB,IAHgB,EAI/BwB,eAAeG,KAJgB,EAK/BH,eAAenB,KALgB,CAAjC;AAOA,KAAMwB,aAAa;AACjBC,aAAU,UADO;AAEjBC,cAAW;;AAGb;;;;;;;AALmB,EAAnB;KAYMC,I;AAEJ,iBAAYzE,OAAZ,EAAqB0E,KAArB,EAA4BvE,OAA5B,EAAqCwE,OAArC,EAA6C;AAAA;;AAC3C,UAAK3E,OAAL,GAAoBA,OAApB;AACA,UAAK0E,KAAL,GAAoBA,KAApB;AACA,UAAKvE,OAAL,GAAoBA,WAAW,EAA/B;AACA,UAAKyE,YAAL,GAAoB,IAApB;AACA,UAAKD,OAAL,GAAoBA,OAApB;AACA,UAAKE,YAAL,GAAoB,IAApB;AACA,UAAKC,QAAL,GAAoB,EAApB;AACA,UAAKC,IAAL,GAAoB,KAApB;AACD;;AAED;;;;;;;;4BAIOJ,O,EAAQ;AACb,YAAKA,OAAL,GAAeA,OAAf;AACA,YAAKK,KAAL;AACA,YAAKC,IAAL;AACD;;AAED;;;;;;4BAGM;AAAE,WAAG,KAAKC,WAAL,CAAiB,SAAjB,CAAH,EAA+B;AAAE;AAAQ;AAC/C,YAAKC,YAAL;AACA,YAAKJ,IAAL,GAAY,IAAZ;AACA,YAAK/E,OAAL,CAAanC,MAAb,CAAoBuB,IAApB,CAAyB;AACvBgG,gBAAO,KAAKpF,OAAL,CAAaoF,KADG;AAEvBV,gBAAO,KAAKA,KAFW;AAGvBvE,kBAAS,KAAKA,OAHS;AAIvBkF,cAAK,KAAKA,GAJa;AAKvBC,mBAAU,KAAKtF,OAAL,CAAauF,OAAb;AALa,QAAzB;AAOD;;AAED;;;;;;;;6BAKQC,M,EAAQC,Q,EAAS;AACvB,WAAG,KAAKP,WAAL,CAAiBM,MAAjB,CAAH,EAA4B;AAC1BC,kBAAS,KAAKb,YAAL,CAAkBc,QAA3B;AACD;;AAED,YAAKZ,QAAL,CAAc1F,IAAd,CAAmB,EAACoG,cAAD,EAASC,kBAAT,EAAnB;AACA,cAAO,IAAP;AACD;;AAGD;;;;6BAEO;AACL,YAAKE,cAAL;AACA,YAAKN,GAAL,GAAoB,IAApB;AACA,YAAKO,QAAL,GAAoB,IAApB;AACA,YAAKhB,YAAL,GAAoB,IAApB;AACA,YAAKG,IAAL,GAAoB,KAApB;AACD;;;wCAEoC;AAAA,WAAvBS,MAAuB,QAAvBA,MAAuB;AAAA,WAAfE,QAAe,QAAfA,QAAe;AAAA,WAALL,GAAK,QAALA,GAAK;;AACnC,YAAKP,QAAL,CAAce,MAAd,CAAsB;AAAA,gBAAKC,EAAEN,MAAF,KAAaA,MAAlB;AAAA,QAAtB,EACcO,OADd,CACuB;AAAA,gBAAKD,EAAEL,QAAF,CAAWC,QAAX,CAAL;AAAA,QADvB;AAED;;;sCAEe;AAAE,WAAG,CAAC,KAAKE,QAAT,EAAkB;AAAE;AAAQ;AAC5C,YAAK5F,OAAL,CAAagG,GAAb,CAAiB,KAAKJ,QAAtB;AACD;;;qCAEc;AACbK,oBAAa,KAAKpB,YAAlB;AACA,YAAKA,YAAL,GAAoB,IAApB;AACD;;;oCAEa;AAAA;;AAAE,WAAG,KAAKA,YAAR,EAAqB;AAAE,cAAKqB,aAAL;AAAsB;AAC3D,YAAKb,GAAL,GAAgB,KAAKrF,OAAL,CAAanC,MAAb,CAAoBsI,OAApB,EAAhB;AACA,YAAKP,QAAL,GAAgB,KAAK5F,OAAL,CAAaoG,cAAb,CAA4B,KAAKf,GAAjC,CAAhB;;AAEA,YAAKrF,OAAL,CAAaC,EAAb,CAAgB,KAAK2F,QAArB,EAA+B,mBAAW;AACxC,eAAKD,cAAL;AACA,eAAKO,aAAL;AACA,eAAKtB,YAAL,GAAoBzE,OAApB;AACA,eAAKkG,YAAL,CAAkBlG,OAAlB;AACD,QALD;;AAOA,YAAK0E,YAAL,GAAoBxC,WAAW,YAAM;AACnC,eAAKiE,OAAL,CAAa,SAAb,EAAwB,EAAxB;AACD,QAFmB,EAEjB,KAAK3B,OAFY,CAApB;AAGD;;;iCAEWa,M,EAAO;AACjB,cAAO,KAAKZ,YAAL,IAAqB,KAAKA,YAAL,CAAkBY,MAAlB,KAA6BA,MAAzD;AACD;;;6BAEOA,M,EAAQE,Q,EAAS;AACvB,YAAK1F,OAAL,CAAasG,OAAb,CAAqB,KAAKV,QAA1B,EAAoC,EAACJ,cAAD,EAASE,kBAAT,EAApC;AACD;;;;;;AAGH;;;;;;;;KAMaa,O,WAAAA,O;AACX,oBAAYnB,KAAZ,EAAmB7G,MAAnB,EAA2BV,MAA3B,EAAmC;AAAA;;AAAA;;AACjC,UAAK2I,KAAL,GAAmB5C,eAAeH,MAAlC;AACA,UAAK2B,KAAL,GAAmBA,KAAnB;AACA,UAAK7G,MAAL,GAAmBA,UAAU,EAA7B;AACA,UAAKV,MAAL,GAAmBA,MAAnB;AACA,UAAK4I,QAAL,GAAmB,EAAnB;AACA,UAAK9B,OAAL,GAAmB,KAAK9G,MAAL,CAAY8G,OAA/B;AACA,UAAK+B,UAAL,GAAmB,KAAnB;AACA,UAAKC,QAAL,GAAmB,IAAIlC,IAAJ,CAAS,IAAT,EAAeR,eAAexB,IAA9B,EAAoC,KAAKlE,MAAzC,EAAiD,KAAKoG,OAAtD,CAAnB;AACA,UAAKiC,UAAL,GAAmB,EAAnB;AACA,UAAKC,WAAL,GAAoB,IAAIC,KAAJ,CAClB;AAAA,cAAM,OAAKC,oBAAL,EAAN;AAAA,MADkB,EAElB,KAAKlJ,MAAL,CAAYmJ,gBAFM,CAApB;AAIA,UAAKL,QAAL,CAAcjE,OAAd,CAAsB,IAAtB,EAA4B,YAAM;AAChC,cAAK8D,KAAL,GAAa5C,eAAeE,MAA5B;AACA,cAAK+C,WAAL,CAAiB7B,KAAjB;AACA,cAAK4B,UAAL,CAAgBb,OAAhB,CAAyB;AAAA,gBAAakB,UAAUhC,IAAV,EAAb;AAAA,QAAzB;AACA,cAAK2B,UAAL,GAAkB,EAAlB;AACD,MALD;AAMA,UAAKM,OAAL,CAAc,YAAM;AAClB,cAAKL,WAAL,CAAiB7B,KAAjB;AACA,cAAKnH,MAAL,CAAYe,GAAZ,CAAgB,SAAhB,aAAoC,OAAKwG,KAAzC,SAAkD,OAAKG,OAAL,EAAlD;AACA,cAAKiB,KAAL,GAAa5C,eAAeH,MAA5B;AACA,cAAK5F,MAAL,CAAYsJ,MAAZ,CAAmB,MAAnB;AACD,MALD;AAMA,UAAKC,OAAL,CAAc,kBAAU;AAAE,WAAG,OAAKC,SAAL,MAAoB,OAAKC,QAAL,EAAvB,EAAuC;AAAE;AAAQ;AACzE,cAAKzJ,MAAL,CAAYe,GAAZ,CAAgB,SAAhB,aAAoC,OAAKwG,KAAzC,EAAkDmC,MAAlD;AACA,cAAKf,KAAL,GAAa5C,eAAeC,OAA5B;AACA,cAAKgD,WAAL,CAAiBW,eAAjB;AACD,MAJD;AAKA,UAAKb,QAAL,CAAcjE,OAAd,CAAsB,SAAtB,EAAiC,YAAM;AAAE,WAAG,CAAC,OAAK+E,SAAL,EAAJ,EAAqB;AAAE;AAAQ;AACtE,cAAK5J,MAAL,CAAYe,GAAZ,CAAgB,SAAhB,eAAsC,OAAKwG,KAA3C,UAAqD,OAAKG,OAAL,EAArD,QAAwE,OAAKoB,QAAL,CAAchC,OAAtF;AACA,WAAI+C,YAAY,IAAIjD,IAAJ,CAAS,MAAT,EAAeR,eAAenB,KAA9B,EAAqC,EAArC,EAAyC,OAAK6B,OAA9C,CAAhB;AACA+C,iBAAUzC,IAAV;AACA,cAAKuB,KAAL,GAAa5C,eAAeC,OAA5B;AACA,cAAK8C,QAAL,CAAc3B,KAAd;AACA,cAAK6B,WAAL,CAAiBW,eAAjB;AACD,MAPD;AAQA,UAAKvH,EAAL,CAAQgE,eAAeG,KAAvB,EAA8B,UAACjE,OAAD,EAAUkF,GAAV,EAAkB;AAC9C,cAAKiB,OAAL,CAAa,OAAKF,cAAL,CAAoBf,GAApB,CAAb,EAAuClF,OAAvC;AACD,MAFD;AAGD;;;;4CAEqB;AACpB,YAAK0G,WAAL,CAAiBW,eAAjB;AACA,WAAG,KAAK3J,MAAL,CAAY8J,WAAZ,EAAH,EAA6B;AAC3B,cAAKC,MAAL;AACD;AACF;;;4BAE2B;AAAA,WAAvBjD,OAAuB,uEAAb,KAAKA,OAAQ;;AAC1B,WAAG,KAAK+B,UAAR,EAAmB;AACjB;AACD,QAFD,MAEO;AACL,cAAKA,UAAL,GAAkB,IAAlB;AACA,cAAKkB,MAAL,CAAYjD,OAAZ;AACA,gBAAO,KAAKgC,QAAZ;AACD;AACF;;;6BAEOlB,Q,EAAS;AAAE,YAAKxF,EAAL,CAAQgE,eAAeC,KAAvB,EAA8BuB,QAA9B;AAAyC;;;6BAEpDA,Q,EAAS;AACf,YAAKxF,EAAL,CAAQgE,eAAeE,KAAvB,EAA8B;AAAA,gBAAUsB,SAAS8B,MAAT,CAAV;AAAA,QAA9B;AACD;;;wBAEE7C,K,EAAOe,Q,EAAS;AAAE,YAAKgB,QAAL,CAAcrH,IAAd,CAAmB,EAACsF,YAAD,EAAQe,kBAAR,EAAnB;AAAuC;;;yBAExDf,K,EAAM;AAAE,YAAK+B,QAAL,GAAgB,KAAKA,QAAL,CAAcZ,MAAd,CAAsB;AAAA,gBAAQgC,KAAKnD,KAAL,KAAeA,KAAvB;AAAA,QAAtB,CAAhB;AAAsE;;;+BAEzE;AAAE,cAAO,KAAK7G,MAAL,CAAY8J,WAAZ,MAA6B,KAAKG,QAAL,EAApC;AAAqD;;;0BAE3DpD,K,EAAOvE,O,EAAgC;AAAA,WAAvBwE,OAAuB,uEAAb,KAAKA,OAAQ;;AAC1C,WAAG,CAAC,KAAK+B,UAAT,EAAoB;AAClB,mCAAwBhC,KAAxB,cAAsC,KAAKU,KAA3C;AACD;AACD,WAAI6B,YAAY,IAAIxC,IAAJ,CAAS,IAAT,EAAeC,KAAf,EAAsBvE,OAAtB,EAA+BwE,OAA/B,CAAhB;AACA,WAAG,KAAKoD,OAAL,EAAH,EAAkB;AAChBd,mBAAUhC,IAAV;AACD,QAFD,MAEO;AACLgC,mBAAU9B,YAAV;AACA,cAAKyB,UAAL,CAAgBxH,IAAhB,CAAqB6H,SAArB;AACD;;AAED,cAAOA,SAAP;AACD;;AAED;;;;;;;;;;;;;;;;;6BAc6B;AAAA;;AAAA,WAAvBtC,OAAuB,uEAAb,KAAKA,OAAQ;;AAC3B,YAAK6B,KAAL,GAAa5C,eAAeI,OAA5B;AACA,WAAIkD,UAAU,SAAVA,OAAU,GAAM;AAClB,gBAAKrJ,MAAL,CAAYe,GAAZ,CAAgB,SAAhB,aAAoC,OAAKwG,KAAzC;AACA,gBAAKkB,OAAL,CAAarC,eAAeC,KAA5B,EAAmC,OAAnC;AACD,QAHD;AAIA,WAAIwD,YAAY,IAAIjD,IAAJ,CAAS,IAAT,EAAeR,eAAenB,KAA9B,EAAqC,EAArC,EAAyC6B,OAAzC,CAAhB;AACA+C,iBAAUhF,OAAV,CAAkB,IAAlB,EAAwB;AAAA,gBAAMwE,SAAN;AAAA,QAAxB,EACUxE,OADV,CACkB,SADlB,EAC6B;AAAA,gBAAMwE,SAAN;AAAA,QAD7B;AAEAQ,iBAAUzC,IAAV;AACA,WAAG,CAAC,KAAK8C,OAAL,EAAJ,EAAmB;AAAEL,mBAAUpB,OAAV,CAAkB,IAAlB,EAAwB,EAAxB;AAA6B;;AAElD,cAAOoB,SAAP;AACD;;AAED;;;;;;;;;;;+BAQUhD,K,EAAOvE,O,EAASkF,G,EAAI;AAAE,cAAOlF,OAAP;AAAgB;;AAGhD;;;;8BAESiF,K,EAAOV,K,EAAOvE,O,EAASoF,O,EAAQ;AACtC,WAAG,KAAKH,KAAL,KAAeA,KAAlB,EAAwB;AAAE,gBAAO,KAAP;AAAc;AACxC,WAAI4C,mBAAmB3D,yBAAyB4D,OAAzB,CAAiCvD,KAAjC,KAA2C,CAAlE;;AAEA,WAAGa,WAAWyC,gBAAX,IAA+BzC,YAAY,KAAKA,OAAL,EAA9C,EAA6D;AAC3D,cAAK1H,MAAL,CAAYe,GAAZ,CAAgB,SAAhB,EAA2B,2BAA3B,EAAwD,EAACwG,YAAD,EAAQV,YAAR,EAAevE,gBAAf,EAAwBoF,gBAAxB,EAAxD;AACA,gBAAO,KAAP;AACD,QAHD,MAGO;AACL,gBAAO,IAAP;AACD;AACF;;;+BAEQ;AAAE,cAAO,KAAKoB,QAAL,CAActB,GAArB;AAA0B;;;8BAE5BV,O,EAAQ;AACf,YAAK6B,KAAL,GAAa5C,eAAeG,OAA5B;AACA,YAAK4C,QAAL,CAAcuB,MAAd,CAAqBvD,OAArB;AACD;;;8BAE6B;AAAA,WAAvBA,OAAuB,uEAAb,KAAKA,OAAQ;AAAE,WAAG,KAAK0C,SAAL,EAAH,EAAoB;AAAE;AAAQ;AAC5D,YAAKc,QAAL,CAAcxD,OAAd;AACD;;;6BAEOD,K,EAAOvE,O,EAASkF,G,EAAKE,O,EAAQ;AAAA;;AACnC,WAAI6C,iBAAiB,KAAKC,SAAL,CAAe3D,KAAf,EAAsBvE,OAAtB,EAA+BkF,GAA/B,EAAoCE,OAApC,CAArB;AACA,WAAGpF,WAAW,CAACiI,cAAf,EAA8B;AAAE,eAAM,6EAAN;AAAsF;;AAEtH,YAAK3B,QAAL,CAAcZ,MAAd,CAAsB;AAAA,gBAAQgC,KAAKnD,KAAL,KAAeA,KAAvB;AAAA,QAAtB,EACc4D,GADd,CACmB;AAAA,gBAAQT,KAAKpC,QAAL,CAAc2C,cAAd,EAA8B/C,GAA9B,EAAmCE,WAAW,OAAKA,OAAL,EAA9C,CAAR;AAAA,QADnB;AAED;;;oCAEcF,G,EAAI;AAAE,8BAAqBA,GAArB;AAA4B;;;gCAEtC;AAAE,cAAO,KAAKmB,KAAL,KAAe5C,eAAeH,MAArC;AAA6C;;;iCAC/C;AAAE,cAAO,KAAK+C,KAAL,KAAe5C,eAAeC,OAArC;AAA8C;;;gCAChD;AAAE,cAAO,KAAK2C,KAAL,KAAe5C,eAAeE,MAArC;AAA6C;;;iCAC/C;AAAE,cAAO,KAAK0C,KAAL,KAAe5C,eAAeG,OAArC;AAA8C;;;iCAChD;AAAE,cAAO,KAAKyC,KAAL,KAAe5C,eAAeI,OAArC;AAA8C;;;;;;AAG7D,KAAIuE,aAAa;AACfzI,SADe,kBACRZ,GADQ,EACHuG,QADG,EACM;AACnB,SAAItF,UAAU,CACZjB,IAAIoG,QADQ,EACEpG,IAAImG,GADN,EACWnG,IAAIkG,KADf,EACsBlG,IAAIwF,KAD1B,EACiCxF,IAAIiB,OADrC,CAAd;AAGA,YAAOsF,SAAS9F,KAAK6I,SAAL,CAAerI,OAAf,CAAT,CAAP;AACD,IANc;AAQfP,SARe,kBAQR6I,UARQ,EAQIhD,QARJ,EAQa;AAAA,uBACmB9F,KAAK+I,KAAL,CAAWD,UAAX,CADnB;AAAA;AAAA,SACrBnD,QADqB;AAAA,SACXD,GADW;AAAA,SACND,KADM;AAAA,SACCV,KADD;AAAA,SACQvE,OADR;;AAG1B,YAAOsF,SAAS,EAACH,kBAAD,EAAWD,QAAX,EAAgBD,YAAhB,EAAuBV,YAAvB,EAA8BvE,gBAA9B,EAAT,CAAP;AACD;AAZc,EAAjB;;AAgBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAsDa7B,M,WAAAA,M;AAEX,mBAAYqK,QAAZ,EAAgC;AAAA;;AAAA,SAAVC,IAAU,uEAAH,EAAG;;AAAA;;AAC9B,UAAKC,oBAAL,GAA4B,EAACtF,MAAM,EAAP,EAAWW,OAAO,EAAlB,EAAsBC,OAAO,EAA7B,EAAiC2E,SAAS,EAA1C,EAA5B;AACA,UAAKlL,QAAL,GAA4B,EAA5B;AACA,UAAKmL,UAAL,GAA4B,EAA5B;AACA,UAAK1D,GAAL,GAA4B,CAA5B;AACA,UAAKV,OAAL,GAA4BiE,KAAKjE,OAAL,IAAgBjB,eAA5C;AACA,UAAKsF,SAAL,GAA4BJ,KAAKI,SAAL,IAAkBtL,OAAOuL,SAAzB,IAAsCC,QAAlE;AACA,UAAKC,cAAL,GAA4BZ,WAAWzI,MAAvC;AACA,UAAKsJ,cAAL,GAA4Bb,WAAW3I,MAAvC;AACA,SAAG,KAAKoJ,SAAL,KAAmBE,QAAtB,EAA+B;AAC7B,YAAKpJ,MAAL,GAAc8I,KAAK9I,MAAL,IAAe,KAAKqJ,cAAlC;AACA,YAAKvJ,MAAL,GAAcgJ,KAAKhJ,MAAL,IAAe,KAAKwJ,cAAlC;AACD,MAHD,MAGO;AACL,YAAKtJ,MAAL,GAAc,KAAKqJ,cAAnB;AACA,YAAKvJ,MAAL,GAAc,KAAKwJ,cAAnB;AACD;AACD,UAAKC,mBAAL,GAA4BT,KAAKS,mBAAL,IAA4B,KAAxD;AACA,UAAKrC,gBAAL,GAA4B4B,KAAK5B,gBAAL,IAAyB,UAASsC,KAAT,EAAe;AAClE,cAAO,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,KAAnB,EAA0BA,QAAQ,CAAlC,KAAwC,KAA/C;AACD,MAFD;AAGA,UAAKC,MAAL,GAA4BX,KAAKW,MAAL,IAAe,YAAU,CAAE,CAAvD,CApB8B,CAoB0B;AACxD,UAAKC,iBAAL,GAA4BZ,KAAKY,iBAAL,IAA0B,KAAtD;AACA,UAAKjL,MAAL,GAA4BqK,KAAKrK,MAAL,IAAe,EAA3C;AACA,UAAKoK,QAAL,GAA+BA,QAA/B,SAA2CrE,WAAWE,SAAtD;AACA,UAAKiF,cAAL,GAA4B,IAA5B;AACA,UAAKC,mBAAL,GAA4B,IAA5B;AACA,UAAKC,cAAL,GAA4B,IAAI7C,KAAJ,CAAU,YAAM;AAC1C,cAAKhI,UAAL,CAAgB;AAAA,gBAAM,OAAKD,OAAL,EAAN;AAAA,QAAhB;AACD,MAF2B,EAEzB,KAAKmI,gBAFoB,CAA5B;AAGD;;;;gCAES;AAAE,cAAO7I,SAASyL,QAAT,CAAkBC,KAAlB,CAAwB,QAAxB,IAAoC,KAApC,GAA4C,IAAnD;AAAyD;;;mCAExD;AACX,WAAIC,MAAMC,KAAKC,YAAL,CACRD,KAAKC,YAAL,CAAkB,KAAKrB,QAAvB,EAAiC,KAAKpK,MAAtC,CADQ,EACuC,EAAC0L,KAAK7G,GAAN,EADvC,CAAV;AAEA,WAAG0G,IAAII,MAAJ,CAAW,CAAX,MAAkB,GAArB,EAAyB;AAAE,gBAAOJ,GAAP;AAAY;AACvC,WAAGA,IAAII,MAAJ,CAAW,CAAX,MAAkB,GAArB,EAAyB;AAAE,gBAAU,KAAKN,QAAL,EAAV,SAA6BE,GAA7B;AAAoC;;AAE/D,cAAU,KAAKF,QAAL,EAAV,WAA+BzL,SAASgM,IAAxC,GAA+CL,GAA/C;AACD;;;gCAEUrE,Q,EAAUtD,I,EAAMoF,M,EAAO;AAChC,WAAG,KAAK6C,IAAR,EAAa;AACX,cAAKA,IAAL,CAAUC,OAAV,GAAoB,YAAU,CAAE,CAAhC,CADW,CACsB;AACjC,aAAGlI,IAAH,EAAQ;AAAE,gBAAKiI,IAAL,CAAUlG,KAAV,CAAgB/B,IAAhB,EAAsBoF,UAAU,EAAhC;AAAqC,UAA/C,MAAqD;AAAE,gBAAK6C,IAAL,CAAUlG,KAAV;AAAmB;AAC1E,cAAKkG,IAAL,GAAY,IAAZ;AACD;AACD3E,mBAAYA,UAAZ;AACD;;AAED;;;;;;;6BAIQlH,M,EAAO;AAAA;;AACb,WAAGA,MAAH,EAAU;AACRI,oBAAWA,QAAQC,GAAR,CAAY,yFAAZ,CAAX;AACA,cAAKL,MAAL,GAAcA,MAAd;AACD;AACD,WAAG,KAAK6L,IAAR,EAAa;AAAE;AAAQ;;AAEvB,YAAKA,IAAL,GAAY,IAAI,KAAKpB,SAAT,CAAmB,KAAKsB,WAAL,EAAnB,CAAZ;AACA,YAAKF,IAAL,CAAUzF,OAAV,GAAsB,KAAK6E,iBAA3B;AACA,YAAKY,IAAL,CAAUG,MAAV,GAAsB;AAAA,gBAAM,OAAKC,UAAL,EAAN;AAAA,QAAtB;AACA,YAAKJ,IAAL,CAAUK,OAAV,GAAsB;AAAA,gBAAS,OAAKC,WAAL,CAAiBvG,KAAjB,CAAT;AAAA,QAAtB;AACA,YAAKiG,IAAL,CAAUO,SAAV,GAAsB;AAAA,gBAAS,OAAKC,aAAL,CAAmBlG,KAAnB,CAAT;AAAA,QAAtB;AACA,YAAK0F,IAAL,CAAUC,OAAV,GAAsB;AAAA,gBAAS,OAAKQ,WAAL,CAAiBnG,KAAjB,CAAT;AAAA,QAAtB;AACD;;AAED;;;;;;;;;yBAMIoG,I,EAAM5L,G,EAAKQ,I,EAAK;AAAE,YAAK6J,MAAL,CAAYuB,IAAZ,EAAkB5L,GAAlB,EAAuBQ,IAAvB;AAA8B;;AAEpD;AACA;AACA;AACA;AACA;AACA;;;;4BACY+F,Q,EAAS;AAAE,YAAKoD,oBAAL,CAA0BtF,IAA1B,CAA+BnE,IAA/B,CAAoCqG,QAApC;AAA+C;;;6BAC1DA,Q,EAAS;AAAE,YAAKoD,oBAAL,CAA0B3E,KAA1B,CAAgC9E,IAAhC,CAAqCqG,QAArC;AAAgD;;;6BAC3DA,Q,EAAS;AAAE,YAAKoD,oBAAL,CAA0B1E,KAA1B,CAAgC/E,IAAhC,CAAqCqG,QAArC;AAAgD;;;+BAC3DA,Q,EAAS;AAAE,YAAKoD,oBAAL,CAA0BC,OAA1B,CAAkC1J,IAAlC,CAAuCqG,QAAvC;AAAkD;;;kCAE7D;AAAA;;AACV,YAAK7G,GAAL,CAAS,WAAT,oBAAsC,KAAK0L,WAAL,EAAtC;AACA,YAAKS,eAAL;AACA,YAAKpB,cAAL,CAAoB3E,KAApB;AACA,WAAG,CAAC,KAAKoF,IAAL,CAAUY,aAAd,EAA4B;AAC1BC,uBAAc,KAAKxB,cAAnB;AACA,cAAKA,cAAL,GAAsByB,YAAY;AAAA,kBAAM,OAAKC,aAAL,EAAN;AAAA,UAAZ,EAAwC,KAAK9B,mBAA7C,CAAtB;AACD;AACD,YAAKR,oBAAL,CAA0BtF,IAA1B,CAA+BwC,OAA/B,CAAwC;AAAA,gBAAYN,UAAZ;AAAA,QAAxC;AACD;;;iCAEWf,K,EAAM;AAChB,YAAK9F,GAAL,CAAS,WAAT,EAAsB,OAAtB,EAA+B8F,KAA/B;AACA,YAAK0G,gBAAL;AACAH,qBAAc,KAAKxB,cAAnB;AACA,YAAKE,cAAL,CAAoBnC,eAApB;AACA,YAAKqB,oBAAL,CAA0B3E,KAA1B,CAAgC6B,OAAhC,CAAyC;AAAA,gBAAYN,SAASf,KAAT,CAAZ;AAAA,QAAzC;AACD;;;iCAEWP,K,EAAM;AAChB,YAAKvF,GAAL,CAAS,WAAT,EAAsBuF,KAAtB;AACA,YAAKiH,gBAAL;AACA,YAAKvC,oBAAL,CAA0B1E,KAA1B,CAAgC4B,OAAhC,CAAyC;AAAA,gBAAYN,SAAStB,KAAT,CAAZ;AAAA,QAAzC;AACD;;;wCAEiB;AAChB,YAAKvG,QAAL,CAAcmI,OAAd,CAAuB;AAAA,gBAAW/F,QAAQsG,OAAR,CAAgBrC,eAAeE,KAA/B,CAAX;AAAA,QAAvB;AACD;;;uCAEgB;AACf,eAAO,KAAKiG,IAAL,IAAa,KAAKA,IAAL,CAAUiB,UAA9B;AACE,cAAKhI,cAAcC,UAAnB;AAA+B,kBAAO,YAAP;AAC/B,cAAKD,cAAcE,IAAnB;AAA+B,kBAAO,MAAP;AAC/B,cAAKF,cAAcG,OAAnB;AAA+B,kBAAO,SAAP;AAC/B;AAA+B,kBAAO,QAAP;AAJjC;AAMD;;;mCAEY;AAAE,cAAO,KAAK8H,eAAL,OAA2B,MAAlC;AAA0C;;;4BAElDtL,O,EAAQ;AACb,YAAKpC,QAAL,GAAgB,KAAKA,QAAL,CAAciI,MAAd,CAAqB;AAAA,gBAAK0F,EAAEhG,OAAF,OAAgBvF,QAAQuF,OAAR,EAArB;AAAA,QAArB,CAAhB;AACD;;AAED;;;;;;;;;;6BAOQH,K,EAAuB;AAAA,WAAhBoG,UAAgB,uEAAH,EAAG;;AAC7B,WAAIC,OAAO,IAAIlF,OAAJ,CAAYnB,KAAZ,EAAmBoG,UAAnB,EAA+B,IAA/B,CAAX;AACA,YAAK5N,QAAL,CAAcwB,IAAd,CAAmBqM,IAAnB;AACA,cAAOA,IAAP;AACD;;;0BAEI/L,I,EAAK;AAAA;;AAAA,WACH0F,KADG,GACqC1F,IADrC,CACH0F,KADG;AAAA,WACIV,KADJ,GACqChF,IADrC,CACIgF,KADJ;AAAA,WACWvE,OADX,GACqCT,IADrC,CACWS,OADX;AAAA,WACoBkF,GADpB,GACqC3F,IADrC,CACoB2F,GADpB;AAAA,WACyBC,QADzB,GACqC5F,IADrC,CACyB4F,QADzB;;AAER,WAAIG,WAAW,SAAXA,QAAW,GAAM;AACnB,gBAAK3F,MAAL,CAAYJ,IAAZ,EAAkB,kBAAU;AAC1B,kBAAK0K,IAAL,CAAUnF,IAAV,CAAeyG,MAAf;AACD,UAFD;AAGD,QAJD;AAKA,YAAK9M,GAAL,CAAS,MAAT,EAAoBwG,KAApB,SAA6BV,KAA7B,UAAuCY,QAAvC,UAAoDD,GAApD,QAA4DlF,OAA5D;AACA,WAAG,KAAKwH,WAAL,EAAH,EAAsB;AACpBlC;AACD,QAFD,MAGK;AACH,cAAKsD,UAAL,CAAgB3J,IAAhB,CAAqBqG,QAArB;AACD;AACF;;AAED;;;;;;+BAGS;AACP,WAAIkG,SAAS,KAAKtG,GAAL,GAAW,CAAxB;AACA,WAAGsG,WAAW,KAAKtG,GAAnB,EAAuB;AAAE,cAAKA,GAAL,GAAW,CAAX;AAAc,QAAvC,MAA6C;AAAE,cAAKA,GAAL,GAAWsG,MAAX;AAAmB;;AAElE,cAAO,KAAKtG,GAAL,CAASuG,QAAT,EAAP;AACD;;;qCAEc;AAAE,WAAG,CAAC,KAAKjE,WAAL,EAAJ,EAAuB;AAAE;AAAQ;AAChD,WAAG,KAAK+B,mBAAR,EAA4B;AAC1B,cAAKA,mBAAL,GAA2B,IAA3B;AACA,cAAK9K,GAAL,CAAS,WAAT,EAAsB,0DAAtB;AACA,cAAKwL,IAAL,CAAUlG,KAAV,CAAgBP,eAAhB,EAAiC,kBAAjC;AACA;AACD;AACD,YAAK+F,mBAAL,GAA2B,KAAKvD,OAAL,EAA3B;AACA,YAAK/G,IAAL,CAAU,EAACgG,OAAO,SAAR,EAAmBV,OAAO,WAA1B,EAAuCvE,SAAS,EAAhD,EAAoDkF,KAAK,KAAKqE,mBAA9D,EAAV;AACD;;;uCAEgB;AACf,WAAG,KAAK/B,WAAL,MAAsB,KAAKoB,UAAL,CAAgB8C,MAAhB,GAAyB,CAAlD,EAAoD;AAClD,cAAK9C,UAAL,CAAgBhD,OAAhB,CAAyB;AAAA,kBAAYN,UAAZ;AAAA,UAAzB;AACA,cAAKsD,UAAL,GAAkB,EAAlB;AACD;AACF;;;mCAEa+C,U,EAAW;AAAA;;AACvB,YAAKlM,MAAL,CAAYkM,WAAWpM,IAAvB,EAA6B,eAAO;AAAA,aAC7B0F,KAD6B,GACWlG,GADX,CAC7BkG,KAD6B;AAAA,aACtBV,KADsB,GACWxF,GADX,CACtBwF,KADsB;AAAA,aACfvE,OADe,GACWjB,GADX,CACfiB,OADe;AAAA,aACNkF,GADM,GACWnG,GADX,CACNmG,GADM;AAAA,aACDC,QADC,GACWpG,GADX,CACDoG,QADC;;AAElC,aAAGD,OAAOA,QAAQ,OAAKqE,mBAAvB,EAA2C;AAAE,kBAAKA,mBAAL,GAA2B,IAA3B;AAAiC;;AAE9E,gBAAK9K,GAAL,CAAS,SAAT,GAAuBuB,QAAQqF,MAAR,IAAkB,EAAzC,UAA+CJ,KAA/C,SAAwDV,KAAxD,UAAiEW,OAAO,MAAMA,GAAN,GAAY,GAAnB,IAA0B,EAA3F,GAAiGlF,OAAjG;AACA,gBAAKvC,QAAL,CAAciI,MAAd,CAAsB;AAAA,kBAAW7F,QAAQ+L,QAAR,CAAiB3G,KAAjB,EAAwBV,KAAxB,EAA+BvE,OAA/B,EAAwCmF,QAAxC,CAAX;AAAA,UAAtB,EACcS,OADd,CACuB;AAAA,kBAAW/F,QAAQsG,OAAR,CAAgB5B,KAAhB,EAAuBvE,OAAvB,EAAgCkF,GAAhC,EAAqCC,QAArC,CAAX;AAAA,UADvB;AAEA,gBAAKuD,oBAAL,CAA0BC,OAA1B,CAAkC/C,OAAlC,CAA2C;AAAA,kBAAYN,SAASvG,GAAT,CAAZ;AAAA,UAA3C;AACD,QARD;AASD;;;;;;KAIUgK,Q,WAAAA,Q;AAEX,qBAAYP,QAAZ,EAAqB;AAAA;;AACnB,UAAKA,QAAL,GAAuB,IAAvB;AACA,UAAKnK,KAAL,GAAuB,IAAvB;AACA,UAAKwM,aAAL,GAAuB,IAAvB;AACA,UAAKT,MAAL,GAAuB,YAAU,CAAE,CAAnC,CAJmB,CAIiB;AACpC,UAAKE,OAAL,GAAuB,YAAU,CAAE,CAAnC,CALmB,CAKiB;AACpC,UAAKE,SAAL,GAAuB,YAAU,CAAE,CAAnC,CANmB,CAMiB;AACpC,UAAKN,OAAL,GAAuB,YAAU,CAAE,CAAnC,CAPmB,CAOiB;AACpC,UAAK2B,YAAL,GAAuB,KAAKC,iBAAL,CAAuBtD,QAAvB,CAAvB;AACA,UAAK0C,UAAL,GAAuBhI,cAAcC,UAArC;;AAEA,UAAK4I,IAAL;AACD;;;;uCAEiBvD,Q,EAAS;AACzB,cAAOA,SACJrI,OADI,CACI,OADJ,EACa,SADb,EAEJA,OAFI,CAEI,QAFJ,EAEc,UAFd,EAGJA,OAHI,CAGI,IAAI6L,MAAJ,CAAW,WAAW7H,WAAWE,SAAjC,CAHJ,EAGiD,QAAQF,WAAWC,QAHpE,CAAP;AAID;;;mCAEY;AACX,cAAOwF,KAAKC,YAAL,CAAkB,KAAKgC,YAAvB,EAAqC,EAACxN,OAAO,KAAKA,KAAb,EAArC,CAAP;AACD;;;qCAEc;AACb,YAAK0F,KAAL;AACA,YAAKmH,UAAL,GAAkBhI,cAAcC,UAAhC;AACD;;;iCAEU;AACT,YAAKmH,OAAL,CAAa,SAAb;AACA,YAAK2B,aAAL;AACD;;;4BAEK;AAAA;;AACJ,WAAG,EAAE,KAAKf,UAAL,KAAoBhI,cAAcE,IAAlC,IAA0C,KAAK8H,UAAL,KAAoBhI,cAAcC,UAA9E,CAAH,EAA6F;AAAE;AAAQ;;AAEvGyG,YAAKsC,OAAL,CAAa,KAAb,EAAoB,KAAKC,WAAL,EAApB,EAAwC,kBAAxC,EAA4D,IAA5D,EAAkE,KAAK3H,OAAvE,EAAgF,KAAK4H,SAAL,CAAe1E,IAAf,CAAoB,IAApB,CAAhF,EAA2G,UAAClF,IAAD,EAAU;AACnH,aAAGA,IAAH,EAAQ;AAAA,eACD6C,MADC,GAC0B7C,IAD1B,CACD6C,MADC;AAAA,eACOhH,KADP,GAC0BmE,IAD1B,CACOnE,KADP;AAAA,eACcgO,QADd,GAC0B7J,IAD1B,CACc6J,QADd;;AAEN,mBAAKhO,KAAL,GAAaA,KAAb;AACD,UAHD,MAGM;AACJ,eAAIgH,SAAS,CAAb;AACD;;AAED,iBAAOA,MAAP;AACE,gBAAK,GAAL;AACEgH,sBAASzG,OAAT,CAAiB;AAAA,sBAAO,QAAK4E,SAAL,CAAe,EAACjL,MAAMR,GAAP,EAAf,CAAP;AAAA,cAAjB;AACA,qBAAKgN,IAAL;AACA;AACF,gBAAK,GAAL;AACE,qBAAKA,IAAL;AACA;AACF,gBAAK,GAAL;AACE,qBAAKb,UAAL,GAAkBhI,cAAcE,IAAhC;AACA,qBAAKgH,MAAL;AACA,qBAAK2B,IAAL;AACA;AACF,gBAAK,CAAL;AACA,gBAAK,GAAL;AACE,qBAAKzB,OAAL;AACA,qBAAK2B,aAAL;AACA;AACF;AAAS,8CAA+B5G,MAA/B;AAlBX;AAoBD,QA5BD;AA6BD;;;0BAEIiH,I,EAAK;AAAA;;AACR1C,YAAKsC,OAAL,CAAa,MAAb,EAAqB,KAAKC,WAAL,EAArB,EAAyC,kBAAzC,EAA6DG,IAA7D,EAAmE,KAAK9H,OAAxE,EAAiF,KAAK8F,OAAL,CAAa5C,IAAb,CAAkB,IAAlB,EAAwB,SAAxB,CAAjF,EAAqH,UAAClF,IAAD,EAAU;AAC7H,aAAG,CAACA,IAAD,IAASA,KAAK6C,MAAL,KAAgB,GAA5B,EAAgC;AAC9B,mBAAKiF,OAAL,CAAa9H,QAAQA,KAAK6C,MAA1B;AACA,mBAAK4G,aAAL;AACD;AACF,QALD;AAMD;;;2BAEKjK,I,EAAMoF,M,EAAO;AACjB,YAAK8D,UAAL,GAAkBhI,cAAcI,MAAhC;AACA,YAAK4G,OAAL;AACD;;;;;;KAGUN,I,WAAAA,I;;;;;;;6BAEI2C,M,EAAQ/D,Q,EAAUgE,M,EAAQF,I,EAAM9H,O,EAAS4H,S,EAAW9G,Q,EAAS;AAC1E,WAAG/H,OAAOkP,cAAV,EAAyB;AACvB,aAAIC,MAAM,IAAID,cAAJ,EAAV,CADuB,CACQ;AAC/B,cAAKE,cAAL,CAAoBD,GAApB,EAAyBH,MAAzB,EAAiC/D,QAAjC,EAA2C8D,IAA3C,EAAiD9H,OAAjD,EAA0D4H,SAA1D,EAAqE9G,QAArE;AACD,QAHD,MAGO;AACL,aAAIoH,OAAMnP,OAAOqP,cAAP,GACE,IAAIrP,OAAOqP,cAAX,EADF,GACgC;AAC9B,aAAIC,aAAJ,CAAkB,mBAAlB,CAFZ,CADK,CAG8C;AACnD,cAAKC,UAAL,CAAgBJ,IAAhB,EAAqBH,MAArB,EAA6B/D,QAA7B,EAAuCgE,MAAvC,EAA+CF,IAA/C,EAAqD9H,OAArD,EAA8D4H,SAA9D,EAAyE9G,QAAzE;AACD;AACF;;;oCAEqBoH,G,EAAKH,M,EAAQ/D,Q,EAAU8D,I,EAAM9H,O,EAAS4H,S,EAAW9G,Q,EAAS;AAAA;;AAC9EoH,WAAIlI,OAAJ,GAAcA,OAAd;AACAkI,WAAItJ,IAAJ,CAASmJ,MAAT,EAAiB/D,QAAjB;AACAkE,WAAIK,MAAJ,GAAa,YAAM;AACjB,aAAIxH,WAAW,QAAKyH,SAAL,CAAeN,IAAIO,YAAnB,CAAf;AACA3H,qBAAYA,SAASC,QAAT,CAAZ;AACD,QAHD;AAIA,WAAG6G,SAAH,EAAa;AAAEM,aAAIN,SAAJ,GAAgBA,SAAhB;AAA2B;;AAE1C;AACAM,WAAIQ,UAAJ,GAAiB,YAAM,CAAE,CAAzB;;AAEAR,WAAI5H,IAAJ,CAASwH,IAAT;AACD;;;gCAEiBI,G,EAAKH,M,EAAQ/D,Q,EAAUgE,M,EAAQF,I,EAAM9H,O,EAAS4H,S,EAAW9G,Q,EAAS;AAAA;;AAClFoH,WAAItJ,IAAJ,CAASmJ,MAAT,EAAiB/D,QAAjB,EAA2B,IAA3B;AACAkE,WAAIlI,OAAJ,GAAcA,OAAd;AACAkI,WAAIS,gBAAJ,CAAqB,cAArB,EAAqCX,MAArC;AACAE,WAAIpC,OAAJ,GAAc,YAAM;AAAEhF,qBAAYA,SAAS,IAAT,CAAZ;AAA4B,QAAlD;AACAoH,WAAIU,kBAAJ,GAAyB,YAAM;AAC7B,aAAGV,IAAIxB,UAAJ,KAAmB,QAAKmC,MAAL,CAAYC,QAA/B,IAA2ChI,QAA9C,EAAuD;AACrD,eAAIC,WAAW,QAAKyH,SAAL,CAAeN,IAAIO,YAAnB,CAAf;AACA3H,oBAASC,QAAT;AACD;AACF,QALD;AAMA,WAAG6G,SAAH,EAAa;AAAEM,aAAIN,SAAJ,GAAgBA,SAAhB;AAA2B;;AAE1CM,WAAI5H,IAAJ,CAASwH,IAAT;AACD;;;+BAEgB9J,I,EAAK;AACpB,WAAG,CAACA,IAAD,IAASA,SAAS,EAArB,EAAwB;AAAE,gBAAO,IAAP;AAAa;;AAEvC,WAAI;AACF,gBAAOhD,KAAK+I,KAAL,CAAW/F,IAAX,CAAP;AACD,QAFD,CAEE,OAAMf,CAAN,EAAS;AACTjD,oBAAWA,QAAQC,GAAR,CAAY,+BAAZ,EAA6C+D,IAA7C,CAAX;AACA,gBAAO,IAAP;AACD;AACF;;;+BAEgB+K,G,EAAKC,S,EAAU;AAC9B,WAAIC,WAAW,EAAf;AACA,YAAI,IAAIC,GAAR,IAAeH,GAAf,EAAmB;AAAE,aAAG,CAACA,IAAII,cAAJ,CAAmBD,GAAnB,CAAJ,EAA4B;AAAE;AAAU;AAC3D,aAAIE,WAAWJ,YAAeA,SAAf,SAA4BE,GAA5B,SAAqCA,GAApD;AACA,aAAIG,WAAWN,IAAIG,GAAJ,CAAf;AACA,aAAG,QAAOG,QAAP,yCAAOA,QAAP,OAAoB,QAAvB,EAAgC;AAC9BJ,oBAASxO,IAAT,CAAc,KAAK6O,SAAL,CAAeD,QAAf,EAAyBD,QAAzB,CAAd;AACD,UAFD,MAEO;AACLH,oBAASxO,IAAT,CAAc8O,mBAAmBH,QAAnB,IAA+B,GAA/B,GAAqCG,mBAAmBF,QAAnB,CAAnD;AACD;AACF;AACD,cAAOJ,SAASnL,IAAT,CAAc,GAAd,CAAP;AACD;;;kCAEmB0L,G,EAAK5P,M,EAAO;AAC9B,WAAG6P,OAAOC,IAAP,CAAY9P,MAAZ,EAAoBsN,MAApB,KAA+B,CAAlC,EAAoC;AAAE,gBAAOsC,GAAP;AAAY;;AAElD,WAAIG,SAASH,IAAItE,KAAJ,CAAU,IAAV,IAAkB,GAAlB,GAAwB,GAArC;AACA,mBAAUsE,GAAV,GAAgBG,MAAhB,GAAyB,KAAKL,SAAL,CAAe1P,MAAf,CAAzB;AACD;;;;;;AAGHwL,MAAKyD,MAAL,GAAc,EAACC,UAAU,CAAX,EAAd;;AAIO,KAAIc,8BAAW;AAEpBC,YAFoB,qBAEVC,YAFU,EAEIC,QAFJ,EAEcC,MAFd,EAEsBC,OAFtB,EAE8B;AAAA;;AAChD,SAAIpI,QAAQ,KAAKqI,KAAL,CAAWJ,YAAX,CAAZ;AACA,SAAIK,QAAQ,EAAZ;AACA,SAAIC,SAAS,EAAb;;AAEA,UAAKzG,GAAL,CAAS9B,KAAT,EAAgB,UAACqH,GAAD,EAAMmB,QAAN,EAAmB;AACjC,WAAG,CAACN,SAASb,GAAT,CAAJ,EAAkB;AAChBkB,gBAAOlB,GAAP,IAAcmB,QAAd;AACD;AACF,MAJD;AAKA,UAAK1G,GAAL,CAASoG,QAAT,EAAmB,UAACb,GAAD,EAAMoB,WAAN,EAAsB;AACvC,WAAIC,kBAAkB1I,MAAMqH,GAAN,CAAtB;AACA,WAAGqB,eAAH,EAAmB;AACjB,aAAIC,UAAUF,YAAYG,KAAZ,CAAkB9G,GAAlB,CAAsB;AAAA,kBAAK+G,EAAEC,OAAP;AAAA,UAAtB,CAAd;AACA,aAAIC,UAAUL,gBAAgBE,KAAhB,CAAsB9G,GAAtB,CAA0B;AAAA,kBAAK+G,EAAEC,OAAP;AAAA,UAA1B,CAAd;AACA,aAAIE,cAAcP,YAAYG,KAAZ,CAAkBvJ,MAAlB,CAAyB;AAAA,kBAAK0J,QAAQtH,OAAR,CAAgBoH,EAAEC,OAAlB,IAA6B,CAAlC;AAAA,UAAzB,CAAlB;AACA,aAAIG,YAAYP,gBAAgBE,KAAhB,CAAsBvJ,MAAtB,CAA6B;AAAA,kBAAKsJ,QAAQlH,OAAR,CAAgBoH,EAAEC,OAAlB,IAA6B,CAAlC;AAAA,UAA7B,CAAhB;AACA,aAAGE,YAAY3D,MAAZ,GAAqB,CAAxB,EAA0B;AACxBiD,iBAAMjB,GAAN,IAAaoB,WAAb;AACAH,iBAAMjB,GAAN,EAAWuB,KAAX,GAAmBI,WAAnB;AACD;AACD,aAAGC,UAAU5D,MAAV,GAAmB,CAAtB,EAAwB;AACtBkD,kBAAOlB,GAAP,IAAc,QAAKgB,KAAL,CAAWK,eAAX,CAAd;AACAH,kBAAOlB,GAAP,EAAYuB,KAAZ,GAAoBK,SAApB;AACD;AACF,QAbD,MAaO;AACLX,eAAMjB,GAAN,IAAaoB,WAAb;AACD;AACF,MAlBD;AAmBA,YAAO,KAAKS,QAAL,CAAclJ,KAAd,EAAqB,EAACsI,OAAOA,KAAR,EAAeC,QAAQA,MAAvB,EAArB,EAAqDJ,MAArD,EAA6DC,OAA7D,CAAP;AACD,IAhCmB;AAkCpBc,WAlCoB,oBAkCXjB,YAlCW,SAkCoBE,MAlCpB,EAkC4BC,OAlC5B,EAkCoC;AAAA,SAAhCE,KAAgC,SAAhCA,KAAgC;AAAA,SAAzBC,MAAyB,SAAzBA,MAAyB;;AACtD,SAAIvI,QAAQ,KAAKqI,KAAL,CAAWJ,YAAX,CAAZ;AACA,SAAG,CAACE,MAAJ,EAAW;AAAEA,gBAAS,kBAAU,CAAE,CAArB;AAAuB;AACpC,SAAG,CAACC,OAAJ,EAAY;AAAEA,iBAAU,mBAAU,CAAE,CAAtB;AAAwB;;AAEtC,UAAKtG,GAAL,CAASwG,KAAT,EAAgB,UAACjB,GAAD,EAAMoB,WAAN,EAAsB;AACpC,WAAIC,kBAAkB1I,MAAMqH,GAAN,CAAtB;AACArH,aAAMqH,GAAN,IAAaoB,WAAb;AACA,WAAGC,eAAH,EAAmB;AAAA;;AACjB,mCAAMrB,GAAN,EAAWuB,KAAX,EAAiBO,OAAjB,4CAA4BT,gBAAgBE,KAA5C;AACD;AACDT,cAAOd,GAAP,EAAYqB,eAAZ,EAA6BD,WAA7B;AACD,MAPD;AAQA,UAAK3G,GAAL,CAASyG,MAAT,EAAiB,UAAClB,GAAD,EAAM+B,YAAN,EAAuB;AACtC,WAAIV,kBAAkB1I,MAAMqH,GAAN,CAAtB;AACA,WAAG,CAACqB,eAAJ,EAAoB;AAAE;AAAQ;AAC9B,WAAIW,eAAeD,aAAaR,KAAb,CAAmB9G,GAAnB,CAAuB;AAAA,gBAAK+G,EAAEC,OAAP;AAAA,QAAvB,CAAnB;AACAJ,uBAAgBE,KAAhB,GAAwBF,gBAAgBE,KAAhB,CAAsBvJ,MAAtB,CAA6B,aAAK;AACxD,gBAAOgK,aAAa5H,OAAb,CAAqB6H,EAAER,OAAvB,IAAkC,CAAzC;AACD,QAFuB,CAAxB;AAGAV,eAAQf,GAAR,EAAaqB,eAAb,EAA8BU,YAA9B;AACA,WAAGV,gBAAgBE,KAAhB,CAAsBvD,MAAtB,KAAiC,CAApC,EAAsC;AACpC,gBAAOrF,MAAMqH,GAAN,CAAP;AACD;AACF,MAXD;AAYA,YAAOrH,KAAP;AACD,IA5DmB;AA8DpBuJ,OA9DoB,gBA8DfC,SA9De,EA8DJC,OA9DI,EA8DI;AACtB,SAAG,CAACA,OAAJ,EAAY;AAAEA,iBAAU,iBAASpC,GAAT,EAAcqC,IAAd,EAAmB;AAAE,gBAAOA,IAAP;AAAa,QAA5C;AAA8C;;AAE5D,YAAO,KAAK5H,GAAL,CAAS0H,SAAT,EAAoB,UAACnC,GAAD,EAAMmB,QAAN,EAAmB;AAC5C,cAAOiB,QAAQpC,GAAR,EAAamB,QAAb,CAAP;AACD,MAFM,CAAP;AAGD,IApEmB;;;AAsEpB;;AAEA1G,MAxEoB,eAwEhBoF,GAxEgB,EAwEXyC,IAxEW,EAwEN;AACZ,YAAO/B,OAAOgC,mBAAP,CAA2B1C,GAA3B,EAAgCpF,GAAhC,CAAoC;AAAA,cAAO6H,KAAKtC,GAAL,EAAUH,IAAIG,GAAJ,CAAV,CAAP;AAAA,MAApC,CAAP;AACD,IA1EmB;AA4EpBgB,QA5EoB,iBA4EdnB,GA5Ec,EA4EV;AAAE,YAAO/N,KAAK+I,KAAL,CAAW/I,KAAK6I,SAAL,CAAekF,GAAf,CAAX,CAAP;AAAwC;AA5EhC,EAAf;;AAgFP;;;;;;;;;;;;;;;;;;;;KAmBM5G,K;AACJ,kBAAYrB,QAAZ,EAAsB4K,SAAtB,EAAgC;AAAA;;AAC9B,UAAK5K,QAAL,GAAiBA,QAAjB;AACA,UAAK4K,SAAL,GAAiBA,SAAjB;AACA,UAAKC,KAAL,GAAiB,IAAjB;AACA,UAAKhH,KAAL,GAAiB,CAAjB;AACD;;;;6BAEM;AACL,YAAKA,KAAL,GAAa,CAAb;AACArD,oBAAa,KAAKqK,KAAlB;AACD;;AAED;;;;;;uCAGiB;AAAA;;AACfrK,oBAAa,KAAKqK,KAAlB;;AAEA,YAAKA,KAAL,GAAajO,WAAW,YAAM;AAC5B,iBAAKiH,KAAL,GAAa,QAAKA,KAAL,GAAa,CAA1B;AACA,iBAAK7D,QAAL;AACD,QAHY,EAGV,KAAK4K,SAAL,CAAe,KAAK/G,KAAL,GAAa,CAA5B,CAHU,CAAb;AAID","file":"ws.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7ecece8f2d95d10deac1","import {WSClient} from \"./wsclient.js\";\nwindow.WSClient = new WSClient();\n\n\n// WEBPACK FOOTER //\n// ./src/app.js","\"use strict\"\nimport {\n    Socket\n} from \"./phoenix.js\"\n\nexport class WSClient {\n    constructor() {\n        this.channels = []\n        this.socket = null\n        this.connected = false\n        this.debug = true\n        this.user_id = null\n        this.game_id = null\n    }\n    connect() {\n        let wsUrl = \"ws://\" + window.location.hostname + \"/socket\"\n        if (wsUrl.includes(\"lords.local\")) {\n            wsUrl = \"ws://\" + window.location.hostname + \":4000/socket\"\n        }\n        this.socket = new Socket(wsUrl, {\n            params: {\n                token: Cookie.read(\"PHPSESSID\")\n            }\n        })\n        if (this.debug) {\n            console.log('trying to connect');\n        }\n        this.socket.connect()\n        this.connected = true\n    }\n    disconnect() {\n        if (this.connected) {\n            this.socket.disconnect()\n            this.connected = false\n            this.user_id = null\n            if (this.debug) {\n                console.log('disconnected');\n            }\n        }\n    }\n\n    setDebug(debug) {\n        this.debug = debug\n    }\n\n    joinChat(chatId) {\n        this.joinChannel(\"chat:\" + chatId);\n    }\n    joinArena() {\n        this.joinChannel(\"arena\");\n    }\n    joinGame(gameId) {\n        this.joinChannel(\"game:\" + gameId);\n    }\n    joinPersonalChannel(user_id) {\n        this.joinChannel(\"user:\" + user_id);\n    }\n    \n    sendChatMessage(chatId, msg) {\n        let channelName = \"chat:\" + chatId\n        this.channels[channelName].push(\"new_msg\", {\n            msg: msg\n        })\n    }\n\n    sendGameChatMessage(gameId, msg) {\n        let channelName = \"game:\" + gameId\n        this.channels[channelName].push(\"new_msg\", {\n            msg: msg\n        })\n    }\n\n    sendBaseProtocolCmd(params) {\n        this.joinChannel(\"base\");\n        this.sendJSONtoChannel(\"base\", \"base_protocol_cmd\", params)\n    }\n\n    sendLoggedProtocolCmd(params, cmd = \"logged_protocol_cmd\") {\n        if (!this.user_id) {\n            let self = this\n            jQuery.get(\"/site/ajax/get_user_session.php\", function(data) {\n                self.user_id = JSON.decode(data)[\"user_id\"]\n                let channelName = \"user:\" + self.user_id\n                self.joinChannel(channelName)\n                self.sendJSONtoChannel(channelName, cmd, params)\n            });\n        } else {\n            this.sendJSONtoChannel(\"user:\" + this.user_id, cmd, params)\n        }\n    }\n\n    sendGameProtocolCmd(params) {\n        this.sendLoggedProtocolCmd(params, \"game_protocol_cmd\")\n    }\n\n    sendPerformance(params) {\n        this.sendLoggedProtocolCmd(params, \"performance\")\n    }\n\n    sendJSONtoChannel(channelName, cmd, params) {\n        if (this.debug) {\n            console.log(\"Send \" + JSON.encode(params) + \" to \" + channelName)\n        }\n        this.channels[channelName].push(cmd, {\n            json_params: JSON.encode(params)\n        })\n    }\n\n    getGameInfo() {\n        this.sendLoggedProtocolCmd({}, \"get_game_info\")\n    }\n\n    getGameStatistic() {\n        this.sendLoggedProtocolCmd({}, \"get_game_statistic\")\n    }\n\n    joinChannel(channelName) {\n        if (!this.connected) {\n            this.connect()\n        }\n        let channel = this.socket.channel(channelName, {})\n\n        channel.on(\"new_msg\", payload => {\n            let chatId = channelName.split(\":\")[1]\n            if (this.debug) {\n                console.log(\"chat_add_user_message(\" + chatId + \", \" + payload.from_user_id + \", \" + decodeURIComponent(payload.msg).replace(/\\r/g, \"\").replace(/\\n/g, \"\\\\n\") + \")\")\n            }\n            window.current_window.contentWindow.chat_add_user_message(chatId, payload.from_user_id, payload.time, decodeURIComponent(payload.msg).replace(/\\r/g, \"\").replace(/\\n/g, \"\\\\n\"))\n        })\n\n        channel.on(\"protocol_raw\", payload => {\n            this.handleProtocolRawMessage(payload)\n        })\n\n        channel.on(\"game_raw\", payload => {\n            if (this.debug) {\n                console.log(payload)\n            }\n            if (!recieve_cmds)\n                return -1;\n            if (!exec_commands_now) {\n                ws_exec_cmds += decodeURIComponent(payload.commands);\n                return -1;\n            }\n            payload.commands = decodeURIComponent(payload.commands);\n            //handling ' (apostrophe) symmetric to game_protocol.php\n            payload.commands = payload.commands.replace(/\\\\u0027/g, \"'\").replace(/\\r/g, \"\").replace(/\\n/g, \"\\\\n\");\n            //console.log(payload.commands);\n            showHint = false;\n            wasError = false;\n            try {\n                if (DEBUG_MODE) {\n                    last_commands[last_commands_i] = payload.commands;\n                    last_commands_i++;\n                    if (last_commands_i > 9) last_commands_i = 0;\n                }\n                no_backlight = true;\n                commands_executing = true;\n                console.log(payload.commands);\n                eval(payload.commands);\n                commands_executing = false;\n                no_backlight = false;\n                after_commands += 'last_moved_unit = 0; showHint = true;';\n                if (anim_is_running) {\n                    post_move_anims += after_commands;\n                } else {\n                    eval(after_commands);\n                }\n                eval(after_commands_anims);\n                after_commands = '';\n                after_commands_anims = '';\n            } catch (e) {\n                wasError = true;\n                if (DEBUG_MODE) {\n                    displayLordsError(e, payload.commands + after_commands + '<br />Last executed_procedure:' + last_executed_procedure + '<br />Last API:' + last_executed_api);\n                }\n            }\n        })\n\n        channel.on(\"game_info_raw\", payload => {\n            let commands = this.convertFromChars(payload.commands);\n            if (this.debug) {\n                console.log(payload)\n            }\n            try {\n                eval(commands);\n                recieve_cmds = true;\n                initialization();\n            } catch (e) {\n                wasError = true;\n                if (DEBUG_MODE) {\n                    displayLordsError(e, commands + after_commands + '<br />Last executed_procedure:' + last_executed_procedure + '<br />Last API:' + last_executed_api);\n                }\n            }\n        })\n\n        channel.on(\"game_statistic_raw\", payload => {\n            let commands = this.convertFromChars(payload.commands);\n            if (this.debug) {\n                console.log(commands)\n            }\n            show_stats(commands)\n        })\n\n        channel.on(\"err\", payload => {\n            switch (payload.code.toInt()) {\n                case 100:\n                    break;\n                case 1010:\n                    setTimeout(\"parent.WSClient.getGameInfo();\", 1000);\n                    break;\n                case 1004:\n                    load_window(\"site/login.php\", \"left\"); //authorized in another browser\n                default:\n                    showError(payload.code, payload.value);\n            }\n        })\n\n        channel.join()\n            .receive(\"ok\", resp => {\n                if (this.debug) {\n                    console.log(\"Joined successfully \" + channelName, resp)\n                }\n                if (typeOf(current_window) != 'null') {\n                    current_window.fade(1);\n                }\n            })\n            .receive(\"error\", resp => {\n                if (this.debug) {\n                    console.log(\"Unable to join \" + channelName, resp)\n                }\n            })\n\n        this.channels[channelName] = channel\n    }\n    leaveChannel(channelName) {\n        if (this.channels[channelName]) {\n            this.channels[channelName].leave()\n            this.channels[channelName] = null\n            if (this.debug) {\n                console.log(\"Leave channel \" + channelName)\n            }\n        }\n    }\n    handleProtocolRawMessage(payload) {\n        if (this.debug) {\n            console.log(decodeURIComponent(payload.commands));\n        }\n        if (current_window.contentWindow.$) {\n            try {\n                current_window.contentWindow.eval(decodeURIComponent(payload.commands));\n            } catch (e) {\n                displayLordsError(e, decodeURIComponent(payload.commands) + '<br />Commands:' + current_window.contentWindow.last_executed_procedure + '<br />Last API:' + current_window.contentWindow.last_executed_api);\n            }\n        }\n    }\n\n    convertFromChars(s) {\n        var escaped_one_to_xml_special_map = {\n            '&amp;': '&',\n            '&quot;': '\"',\n            '&lt;': '<',\n            '&gt;': '>',\n            '&#92;': '\\\\',\n            '&apos;': '\\'',\n            '&#39;': '\\''\n        };\n        return s.replace(/(&quot;|&lt;|&gt;|&amp;|&#92;|&apos;|&#39;)/g, function (str, item) {\n            return escaped_one_to_xml_special_map[item];\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/wsclient.js","/**\n * Phoenix Channels JavaScript client\n *\n * ## Socket Connection\n *\n * A single connection is established to the server and\n * channels are multiplexed over the connection.\n * Connect to the server using the `Socket` class:\n *\n * ```javascript\n *     let socket = new Socket(\"/socket\", {params: {userToken: \"123\"}})\n *     socket.connect()\n * ```\n *\n * The `Socket` constructor takes the mount point of the socket,\n * the authentication params, as well as options that can be found in\n * the Socket docs, such as configuring the `LongPoll` transport, and\n * heartbeat.\n *\n * ## Channels\n *\n * Channels are isolated, concurrent processes on the server that\n * subscribe to topics and broker events between the client and server.\n * To join a channel, you must provide the topic, and channel params for\n * authorization. Here's an example chat room example where `\"new_msg\"`\n * events are listened for, messages are pushed to the server, and\n * the channel is joined with ok/error/timeout matches:\n *\n * ```javascript\n *     let channel = socket.channel(\"room:123\", {token: roomToken})\n *     channel.on(\"new_msg\", msg => console.log(\"Got message\", msg) )\n *     $input.onEnter( e => {\n *       channel.push(\"new_msg\", {body: e.target.val}, 10000)\n *        .receive(\"ok\", (msg) => console.log(\"created message\", msg) )\n *        .receive(\"error\", (reasons) => console.log(\"create failed\", reasons) )\n *        .receive(\"timeout\", () => console.log(\"Networking issue...\") )\n *     })\n *     channel.join()\n *       .receive(\"ok\", ({messages}) => console.log(\"catching up\", messages) )\n *       .receive(\"error\", ({reason}) => console.log(\"failed join\", reason) )\n *       .receive(\"timeout\", () => console.log(\"Networking issue. Still waiting...\") )\n *```\n *\n * ## Joining\n *\n * Creating a channel with `socket.channel(topic, params)`, binds the params to\n * `channel.params`, which are sent up on `channel.join()`.\n * Subsequent rejoins will send up the modified params for\n * updating authorization params, or passing up last_message_id information.\n * Successful joins receive an \"ok\" status, while unsuccessful joins\n * receive \"error\".\n *\n * ## Duplicate Join Subscriptions\n *\n * While the client may join any number of topics on any number of channels,\n * the client may only hold a single subscription for each unique topic at any\n * given time. When attempting to create a duplicate subscription,\n * the server will close the existing channel, log a warning, and\n * spawn a new channel for the topic. The client will have their\n * `channel.onClose` callbacks fired for the existing channel, and the new\n * channel join will have its receive hooks processed as normal.\n *\n * ## Pushing Messages\n *\n * From the previous example, we can see that pushing messages to the server\n * can be done with `channel.push(eventName, payload)` and we can optionally\n * receive responses from the push. Additionally, we can use\n * `receive(\"timeout\", callback)` to abort waiting for our other `receive` hooks\n *  and take action after some period of waiting. The default timeout is 5000ms.\n *\n *\n * ## Socket Hooks\n *\n * Lifecycle events of the multiplexed connection can be hooked into via\n * `socket.onError()` and `socket.onClose()` events, ie:\n *\n * ```javascript\n *     socket.onError( () => console.log(\"there was an error with the connection!\") )\n *     socket.onClose( () => console.log(\"the connection dropped\") )\n * ```\n *\n *\n * ## Channel Hooks\n *\n * For each joined channel, you can bind to `onError` and `onClose` events\n * to monitor the channel lifecycle, ie:\n *\n * ```javascript\n *     channel.onError( () => console.log(\"there was an error!\") )\n *     channel.onClose( () => console.log(\"the channel has gone away gracefully\") )\n * ```\n *\n * ### onError hooks\n *\n * `onError` hooks are invoked if the socket connection drops, or the channel\n * crashes on the server. In either case, a channel rejoin is attempted\n * automatically in an exponential backoff manner.\n *\n * ### onClose hooks\n *\n * `onClose` hooks are invoked only in two cases. 1) the channel explicitly\n * closed on the server, or 2). The client explicitly closed, by calling\n * `channel.leave()`\n *\n *\n * ## Presence\n *\n * The `Presence` object provides features for syncing presence information\n * from the server with the client and handling presences joining and leaving.\n *\n * ### Syncing initial state from the server\n *\n * `Presence.syncState` is used to sync the list of presences on the server\n * with the client's state. An optional `onJoin` and `onLeave` callback can\n * be provided to react to changes in the client's local presences across\n * disconnects and reconnects with the server.\n *\n * `Presence.syncDiff` is used to sync a diff of presence join and leave\n * events from the server, as they happen. Like `syncState`, `syncDiff`\n * accepts optional `onJoin` and `onLeave` callbacks to react to a user\n * joining or leaving from a device.\n *\n * ### Listing Presences\n *\n * `Presence.list` is used to return a list of presence information\n * based on the local state of metadata. By default, all presence\n * metadata is returned, but a `listBy` function can be supplied to\n * allow the client to select which metadata to use for a given presence.\n * For example, you may have a user online from different devices with\n * a metadata status of \"online\", but they have set themselves to \"away\"\n * on another device. In this case, the app may choose to use the \"away\"\n * status for what appears on the UI. The example below defines a `listBy`\n * function which prioritizes the first metadata which was registered for\n * each user. This could be the first tab they opened, or the first device\n * they came online from:\n *\n * ```javascript\n *     let state = {}\n *     state = Presence.syncState(state, stateFromServer)\n *     let listBy = (id, {metas: [first, ...rest]}) => {\n *       first.count = rest.length + 1 // count of this user's presences\n *       first.id = id\n *       return first\n *     }\n *     let onlineUsers = Presence.list(state, listBy)\n * ```\n *\n *\n * ### Example Usage\n *```javascript\n *     // detect if user has joined for the 1st time or from another tab/device\n *     let onJoin = (id, current, newPres) => {\n *       if(!current){\n *         console.log(\"user has entered for the first time\", newPres)\n *       } else {\n *         console.log(\"user additional presence\", newPres)\n *       }\n *     }\n *     // detect if user has left from all tabs/devices, or is still present\n *     let onLeave = (id, current, leftPres) => {\n *       if(current.metas.length === 0){\n *         console.log(\"user has left from all devices\", leftPres)\n *       } else {\n *         console.log(\"user left from a device\", leftPres)\n *       }\n *     }\n *     let presences = {} // client's initial empty presence state\n *     // receive initial presence data from server, sent after join\n *     myChannel.on(\"presence_state\", state => {\n *       presences = Presence.syncState(presences, state, onJoin, onLeave)\n *       displayUsers(Presence.list(presences))\n *     })\n *     // receive \"presence_diff\" from server, containing join/leave events\n *     myChannel.on(\"presence_diff\", diff => {\n *       presences = Presence.syncDiff(presences, diff, onJoin, onLeave)\n *       this.setState({users: Presence.list(room.presences, listBy)})\n *     })\n * ```\n * @module phoenix\n */\n\nconst VSN = \"2.0.0\"\nconst SOCKET_STATES = {connecting: 0, open: 1, closing: 2, closed: 3}\nconst DEFAULT_TIMEOUT = 10000\nconst WS_CLOSE_NORMAL = 1000\nconst CHANNEL_STATES = {\n  closed: \"closed\",\n  errored: \"errored\",\n  joined: \"joined\",\n  joining: \"joining\",\n  leaving: \"leaving\",\n}\nconst CHANNEL_EVENTS = {\n  close: \"phx_close\",\n  error: \"phx_error\",\n  join: \"phx_join\",\n  reply: \"phx_reply\",\n  leave: \"phx_leave\"\n}\nconst CHANNEL_LIFECYCLE_EVENTS = [\n  CHANNEL_EVENTS.close,\n  CHANNEL_EVENTS.error,\n  CHANNEL_EVENTS.join,\n  CHANNEL_EVENTS.reply,\n  CHANNEL_EVENTS.leave\n]\nconst TRANSPORTS = {\n  longpoll: \"longpoll\",\n  websocket: \"websocket\"\n}\n\n/**\n * Initializes the Push\n * @param {Channel} channel - The Channel\n * @param {string} event - The event, for example `\"phx_join\"`\n * @param {Object} payload - The payload, for example `{user_id: 123}`\n * @param {number} timeout - The push timeout in milliseconds\n */\nclass Push {\n\n  constructor(channel, event, payload, timeout){\n    this.channel      = channel\n    this.event        = event\n    this.payload      = payload || {}\n    this.receivedResp = null\n    this.timeout      = timeout\n    this.timeoutTimer = null\n    this.recHooks     = []\n    this.sent         = false\n  }\n\n  /**\n   *\n   * @param {number} timeout\n   */\n  resend(timeout){\n    this.timeout = timeout\n    this.reset()\n    this.send()\n  }\n\n  /**\n   *\n   */\n  send(){ if(this.hasReceived(\"timeout\")){ return }\n    this.startTimeout()\n    this.sent = true\n    this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload,\n      ref: this.ref,\n      join_ref: this.channel.joinRef()\n    })\n  }\n\n  /**\n   *\n   * @param {*} status\n   * @param {*} callback\n   */\n  receive(status, callback){\n    if(this.hasReceived(status)){\n      callback(this.receivedResp.response)\n    }\n\n    this.recHooks.push({status, callback})\n    return this\n  }\n\n\n  // private\n\n  reset(){\n    this.cancelRefEvent()\n    this.ref          = null\n    this.refEvent     = null\n    this.receivedResp = null\n    this.sent         = false\n  }\n\n  matchReceive({status, response, ref}){\n    this.recHooks.filter( h => h.status === status )\n                 .forEach( h => h.callback(response) )\n  }\n\n  cancelRefEvent(){ if(!this.refEvent){ return }\n    this.channel.off(this.refEvent)\n  }\n\n  cancelTimeout(){\n    clearTimeout(this.timeoutTimer)\n    this.timeoutTimer = null\n  }\n\n  startTimeout(){ if(this.timeoutTimer){ this.cancelTimeout() }\n    this.ref      = this.channel.socket.makeRef()\n    this.refEvent = this.channel.replyEventName(this.ref)\n\n    this.channel.on(this.refEvent, payload => {\n      this.cancelRefEvent()\n      this.cancelTimeout()\n      this.receivedResp = payload\n      this.matchReceive(payload)\n    })\n\n    this.timeoutTimer = setTimeout(() => {\n      this.trigger(\"timeout\", {})\n    }, this.timeout)\n  }\n\n  hasReceived(status){\n    return this.receivedResp && this.receivedResp.status === status\n  }\n\n  trigger(status, response){\n    this.channel.trigger(this.refEvent, {status, response})\n  }\n}\n\n/**\n *\n * @param {string} topic\n * @param {Object} params\n * @param {Socket} socket\n */\nexport class Channel {\n  constructor(topic, params, socket) {\n    this.state       = CHANNEL_STATES.closed\n    this.topic       = topic\n    this.params      = params || {}\n    this.socket      = socket\n    this.bindings    = []\n    this.timeout     = this.socket.timeout\n    this.joinedOnce  = false\n    this.joinPush    = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout)\n    this.pushBuffer  = []\n    this.rejoinTimer  = new Timer(\n      () => this.rejoinUntilConnected(),\n      this.socket.reconnectAfterMs\n    )\n    this.joinPush.receive(\"ok\", () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach( pushEvent => pushEvent.send() )\n      this.pushBuffer = []\n    })\n    this.onClose( () => {\n      this.rejoinTimer.reset()\n      this.socket.log(\"channel\", `close ${this.topic} ${this.joinRef()}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket.remove(this)\n    })\n    this.onError( reason => { if(this.isLeaving() || this.isClosed()){ return }\n      this.socket.log(\"channel\", `error ${this.topic}`, reason)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this.joinPush.receive(\"timeout\", () => { if(!this.isJoining()){ return }\n      this.socket.log(\"channel\", `timeout ${this.topic} (${this.joinRef()})`, this.joinPush.timeout)\n      let leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, this.timeout)\n      leavePush.send()\n      this.state = CHANNEL_STATES.errored\n      this.joinPush.reset()\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n      this.trigger(this.replyEventName(ref), payload)\n    })\n  }\n\n  rejoinUntilConnected(){\n    this.rejoinTimer.scheduleTimeout()\n    if(this.socket.isConnected()){\n      this.rejoin()\n    }\n  }\n\n  join(timeout = this.timeout){\n    if(this.joinedOnce){\n      throw(`tried to join multiple times. 'join' can only be called a single time per channel instance`)\n    } else {\n      this.joinedOnce = true\n      this.rejoin(timeout)\n      return this.joinPush\n    }\n  }\n\n  onClose(callback){ this.on(CHANNEL_EVENTS.close, callback) }\n\n  onError(callback){\n    this.on(CHANNEL_EVENTS.error, reason => callback(reason) )\n  }\n\n  on(event, callback){ this.bindings.push({event, callback}) }\n\n  off(event){ this.bindings = this.bindings.filter( bind => bind.event !== event ) }\n\n  canPush(){ return this.socket.isConnected() && this.isJoined() }\n\n  push(event, payload, timeout = this.timeout){\n    if(!this.joinedOnce){\n      throw(`tried to push '${event}' to '${this.topic}' before joining. Use channel.join() before pushing events`)\n    }\n    let pushEvent = new Push(this, event, payload, timeout)\n    if(this.canPush()){\n      pushEvent.send()\n    } else {\n      pushEvent.startTimeout()\n      this.pushBuffer.push(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  /** Leaves the channel\n   *\n   * Unsubscribes from server events, and\n   * instructs channel to terminate on server\n   *\n   * Triggers onClose() hooks\n   *\n   * To receive leave acknowledgements, use the a `receive`\n   * hook to bind to the server ack, ie:\n   *\n   * ```javascript\n   *     channel.leave().receive(\"ok\", () => alert(\"left!\") )\n   * ```\n   */\n  leave(timeout = this.timeout){\n    this.state = CHANNEL_STATES.leaving\n    let onClose = () => {\n      this.socket.log(\"channel\", `leave ${this.topic}`)\n      this.trigger(CHANNEL_EVENTS.close, \"leave\")\n    }\n    let leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout)\n    leavePush.receive(\"ok\", () => onClose() )\n             .receive(\"timeout\", () => onClose() )\n    leavePush.send()\n    if(!this.canPush()){ leavePush.trigger(\"ok\", {}) }\n\n    return leavePush\n  }\n\n  /**\n   * Overridable message hook\n   *\n   * Receives all events for specialized message handling\n   * before dispatching to the channel callbacks.\n   *\n   * Must return the payload, modified or unmodified\n   */\n  onMessage(event, payload, ref){ return payload }\n\n\n  // private\n\n  isMember(topic, event, payload, joinRef){\n    if(this.topic !== topic){ return false }\n    let isLifecycleEvent = CHANNEL_LIFECYCLE_EVENTS.indexOf(event) >= 0\n\n    if(joinRef && isLifecycleEvent && joinRef !== this.joinRef()){\n      this.socket.log(\"channel\", \"dropping outdated message\", {topic, event, payload, joinRef})\n      return false\n    } else {\n      return true\n    }\n  }\n\n  joinRef(){ return this.joinPush.ref }\n\n  sendJoin(timeout){\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  rejoin(timeout = this.timeout){ if(this.isLeaving()){ return }\n    this.sendJoin(timeout)\n  }\n\n  trigger(event, payload, ref, joinRef){\n    let handledPayload = this.onMessage(event, payload, ref, joinRef)\n    if(payload && !handledPayload){ throw(\"channel onMessage callbacks must return the payload, modified or unmodified\") }\n\n    this.bindings.filter( bind => bind.event === event)\n                 .map( bind => bind.callback(handledPayload, ref, joinRef || this.joinRef()))\n  }\n\n  replyEventName(ref){ return `chan_reply_${ref}` }\n\n  isClosed() { return this.state === CHANNEL_STATES.closed }\n  isErrored(){ return this.state === CHANNEL_STATES.errored }\n  isJoined() { return this.state === CHANNEL_STATES.joined }\n  isJoining(){ return this.state === CHANNEL_STATES.joining }\n  isLeaving(){ return this.state === CHANNEL_STATES.leaving }\n}\n\nlet Serializer = {\n  encode(msg, callback){\n    let payload = [\n      msg.join_ref, msg.ref, msg.topic, msg.event, msg.payload\n    ]\n    return callback(JSON.stringify(payload))\n  },\n\n  decode(rawPayload, callback){\n    let [join_ref, ref, topic, event, payload] = JSON.parse(rawPayload)\n\n    return callback({join_ref, ref, topic, event, payload})\n  }\n}\n\n\n/** Initializes the Socket\n *\n *\n * For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n *\n * @param {string} endPoint - The string WebSocket endpoint, ie, `\"ws://example.com/socket\"`,\n *                                               `\"wss://example.com\"`\n *                                               `\"/socket\"` (inherited host & protocol)\n * @param {Object} opts - Optional configuration\n * @param {string} opts.transport - The Websocket Transport, for example WebSocket or Phoenix.LongPoll.\n *\n * Defaults to WebSocket with automatic LongPoll fallback.\n * @param {Function} opts.encode - The function to encode outgoing messages.\n *\n * Defaults to JSON:\n *\n * ```javascript\n * (payload, callback) => callback(JSON.stringify(payload))\n * ```\n *\n * @param {Function} opts.decode - The function to decode incoming messages.\n *\n * Defaults to JSON:\n *\n * ```javascript\n * (payload, callback) => callback(JSON.parse(payload))\n * ```\n *\n * @param {number} opts.timeout - The default timeout in milliseconds to trigger push timeouts.\n *\n * Defaults `DEFAULT_TIMEOUT`\n * @param {number} opts.heartbeatIntervalMs - The millisec interval to send a heartbeat message\n * @param {number} opts.reconnectAfterMs - The optional function that returns the millsec reconnect interval.\n *\n * Defaults to stepped backoff of:\n *\n * ```javascript\n *  function(tries){\n *    return [1000, 5000, 10000][tries - 1] || 10000\n *  }\n * ```\n * @param {Function} opts.logger - The optional function for specialized logging, ie:\n * ```javascript\n * logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n * ```\n *\n * @param {number}  opts.longpollerTimeout - The maximum timeout of a long poll AJAX request.\n *\n * Defaults to 20s (double the server long poll timer).\n *\n * @param {Object}  opts.params - The optional params to pass when connecting\n *\n *\n*/\nexport class Socket {\n\n  constructor(endPoint, opts = {}){\n    this.stateChangeCallbacks = {open: [], close: [], error: [], message: []}\n    this.channels             = []\n    this.sendBuffer           = []\n    this.ref                  = 0\n    this.timeout              = opts.timeout || DEFAULT_TIMEOUT\n    this.transport            = opts.transport || window.WebSocket || LongPoll\n    this.defaultEncoder       = Serializer.encode\n    this.defaultDecoder       = Serializer.decode\n    if(this.transport !== LongPoll){\n      this.encode = opts.encode || this.defaultEncoder\n      this.decode = opts.decode || this.defaultDecoder\n    } else {\n      this.encode = this.defaultEncoder\n      this.decode = this.defaultDecoder\n    }\n    this.heartbeatIntervalMs  = opts.heartbeatIntervalMs || 30000\n    this.reconnectAfterMs     = opts.reconnectAfterMs || function(tries){\n      return [1000, 2000, 5000, 10000][tries - 1] || 10000\n    }\n    this.logger               = opts.logger || function(){} // noop\n    this.longpollerTimeout    = opts.longpollerTimeout || 20000\n    this.params               = opts.params || {}\n    this.endPoint             = `${endPoint}/${TRANSPORTS.websocket}`\n    this.heartbeatTimer       = null\n    this.pendingHeartbeatRef  = null\n    this.reconnectTimer       = new Timer(() => {\n      this.disconnect(() => this.connect())\n    }, this.reconnectAfterMs)\n  }\n\n  protocol(){ return location.protocol.match(/^https/) ? \"wss\" : \"ws\" }\n\n  endPointURL(){\n    let uri = Ajax.appendParams(\n      Ajax.appendParams(this.endPoint, this.params), {vsn: VSN})\n    if(uri.charAt(0) !== \"/\"){ return uri }\n    if(uri.charAt(1) === \"/\"){ return `${this.protocol()}:${uri}` }\n\n    return `${this.protocol()}://${location.host}${uri}`\n  }\n\n  disconnect(callback, code, reason){\n    if(this.conn){\n      this.conn.onclose = function(){} // noop\n      if(code){ this.conn.close(code, reason || \"\") } else { this.conn.close() }\n      this.conn = null\n    }\n    callback && callback()\n  }\n\n  /**\n   *\n   * @param {Object} params - The params to send when connecting, for example `{user_id: userToken}`\n   */\n  connect(params){\n    if(params){\n      console && console.log(\"passing params to connect is deprecated. Instead pass :params to the Socket constructor\")\n      this.params = params\n    }\n    if(this.conn){ return }\n\n    this.conn = new this.transport(this.endPointURL())\n    this.conn.timeout   = this.longpollerTimeout\n    this.conn.onopen    = () => this.onConnOpen()\n    this.conn.onerror   = error => this.onConnError(error)\n    this.conn.onmessage = event => this.onConnMessage(event)\n    this.conn.onclose   = event => this.onConnClose(event)\n  }\n\n  /**\n   * Logs the message. Override `this.logger` for specialized logging. noops by default\n   * @param {string} kind\n   * @param {string} msg\n   * @param {Object} data\n   */\n  log(kind, msg, data){ this.logger(kind, msg, data) }\n\n  // Registers callbacks for connection state change events\n  //\n  // Examples\n  //\n  //    socket.onError(function(error){ alert(\"An error occurred\") })\n  //\n  onOpen     (callback){ this.stateChangeCallbacks.open.push(callback) }\n  onClose    (callback){ this.stateChangeCallbacks.close.push(callback) }\n  onError    (callback){ this.stateChangeCallbacks.error.push(callback) }\n  onMessage  (callback){ this.stateChangeCallbacks.message.push(callback) }\n\n  onConnOpen(){\n    this.log(\"transport\", `connected to ${this.endPointURL()}`)\n    this.flushSendBuffer()\n    this.reconnectTimer.reset()\n    if(!this.conn.skipHeartbeat){\n      clearInterval(this.heartbeatTimer)\n      this.heartbeatTimer = setInterval(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n    }\n    this.stateChangeCallbacks.open.forEach( callback => callback() )\n  }\n\n  onConnClose(event){\n    this.log(\"transport\", \"close\", event)\n    this.triggerChanError()\n    clearInterval(this.heartbeatTimer)\n    this.reconnectTimer.scheduleTimeout()\n    this.stateChangeCallbacks.close.forEach( callback => callback(event) )\n  }\n\n  onConnError(error){\n    this.log(\"transport\", error)\n    this.triggerChanError()\n    this.stateChangeCallbacks.error.forEach( callback => callback(error) )\n  }\n\n  triggerChanError(){\n    this.channels.forEach( channel => channel.trigger(CHANNEL_EVENTS.error) )\n  }\n\n  connectionState(){\n    switch(this.conn && this.conn.readyState){\n      case SOCKET_STATES.connecting: return \"connecting\"\n      case SOCKET_STATES.open:       return \"open\"\n      case SOCKET_STATES.closing:    return \"closing\"\n      default:                       return \"closed\"\n    }\n  }\n\n  isConnected(){ return this.connectionState() === \"open\" }\n\n  remove(channel){\n    this.channels = this.channels.filter(c => c.joinRef() !== channel.joinRef())\n  }\n\n  /**\n   * Initiates a new channel for the given topic\n   *\n   * @param {string} topic\n   * @param {Object} chanParams - Paramaters for the channel\n   * @returns {Channel}\n   */\n  channel(topic, chanParams = {}){\n    let chan = new Channel(topic, chanParams, this)\n    this.channels.push(chan)\n    return chan\n  }\n\n  push(data){\n    let {topic, event, payload, ref, join_ref} = data\n    let callback = () => {\n      this.encode(data, result => {\n        this.conn.send(result)\n      })\n    }\n    this.log(\"push\", `${topic} ${event} (${join_ref}, ${ref})`, payload)\n    if(this.isConnected()){\n      callback()\n    }\n    else {\n      this.sendBuffer.push(callback)\n    }\n  }\n\n  /**\n   * Return the next message ref, accounting for overflows\n   */\n  makeRef(){\n    let newRef = this.ref + 1\n    if(newRef === this.ref){ this.ref = 0 } else { this.ref = newRef }\n\n    return this.ref.toString()\n  }\n\n  sendHeartbeat(){ if(!this.isConnected()){ return }\n    if(this.pendingHeartbeatRef){\n      this.pendingHeartbeatRef = null\n      this.log(\"transport\", \"heartbeat timeout. Attempting to re-establish connection\")\n      this.conn.close(WS_CLOSE_NORMAL, \"hearbeat timeout\")\n      return\n    }\n    this.pendingHeartbeatRef = this.makeRef()\n    this.push({topic: \"phoenix\", event: \"heartbeat\", payload: {}, ref: this.pendingHeartbeatRef})\n  }\n\n  flushSendBuffer(){\n    if(this.isConnected() && this.sendBuffer.length > 0){\n      this.sendBuffer.forEach( callback => callback() )\n      this.sendBuffer = []\n    }\n  }\n\n  onConnMessage(rawMessage){\n    this.decode(rawMessage.data, msg => {\n      let {topic, event, payload, ref, join_ref} = msg\n      if(ref && ref === this.pendingHeartbeatRef){ this.pendingHeartbeatRef = null }\n\n      this.log(\"receive\", `${payload.status || \"\"} ${topic} ${event} ${ref && \"(\" + ref + \")\" || \"\"}`, payload)\n      this.channels.filter( channel => channel.isMember(topic, event, payload, join_ref) )\n                   .forEach( channel => channel.trigger(event, payload, ref, join_ref) )\n      this.stateChangeCallbacks.message.forEach( callback => callback(msg) )\n    })\n  }\n}\n\n\nexport class LongPoll {\n\n  constructor(endPoint){\n    this.endPoint        = null\n    this.token           = null\n    this.skipHeartbeat   = true\n    this.onopen          = function(){} // noop\n    this.onerror         = function(){} // noop\n    this.onmessage       = function(){} // noop\n    this.onclose         = function(){} // noop\n    this.pollEndpoint    = this.normalizeEndpoint(endPoint)\n    this.readyState      = SOCKET_STATES.connecting\n\n    this.poll()\n  }\n\n  normalizeEndpoint(endPoint){\n    return(endPoint\n      .replace(\"ws://\", \"http://\")\n      .replace(\"wss://\", \"https://\")\n      .replace(new RegExp(\"(.*)\\/\" + TRANSPORTS.websocket), \"$1/\" + TRANSPORTS.longpoll))\n  }\n\n  endpointURL(){\n    return Ajax.appendParams(this.pollEndpoint, {token: this.token})\n  }\n\n  closeAndRetry(){\n    this.close()\n    this.readyState = SOCKET_STATES.connecting\n  }\n\n  ontimeout(){\n    this.onerror(\"timeout\")\n    this.closeAndRetry()\n  }\n\n  poll(){\n    if(!(this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting)){ return }\n\n    Ajax.request(\"GET\", this.endpointURL(), \"application/json\", null, this.timeout, this.ontimeout.bind(this), (resp) => {\n      if(resp){\n        var {status, token, messages} = resp\n        this.token = token\n      } else{\n        var status = 0\n      }\n\n      switch(status){\n        case 200:\n          messages.forEach(msg => this.onmessage({data: msg}))\n          this.poll()\n          break\n        case 204:\n          this.poll()\n          break\n        case 410:\n          this.readyState = SOCKET_STATES.open\n          this.onopen()\n          this.poll()\n          break\n        case 0:\n        case 500:\n          this.onerror()\n          this.closeAndRetry()\n          break\n        default: throw(`unhandled poll status ${status}`)\n      }\n    })\n  }\n\n  send(body){\n    Ajax.request(\"POST\", this.endpointURL(), \"application/json\", body, this.timeout, this.onerror.bind(this, \"timeout\"), (resp) => {\n      if(!resp || resp.status !== 200){\n        this.onerror(resp && resp.status)\n        this.closeAndRetry()\n      }\n    })\n  }\n\n  close(code, reason){\n    this.readyState = SOCKET_STATES.closed\n    this.onclose()\n  }\n}\n\nexport class Ajax {\n\n  static request(method, endPoint, accept, body, timeout, ontimeout, callback){\n    if(window.XDomainRequest){\n      let req = new XDomainRequest() // IE8, IE9\n      this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback)\n    } else {\n      let req = window.XMLHttpRequest ?\n                  new window.XMLHttpRequest() : // IE7+, Firefox, Chrome, Opera, Safari\n                  new ActiveXObject(\"Microsoft.XMLHTTP\") // IE6, IE5\n      this.xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback)\n    }\n  }\n\n  static xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback){\n    req.timeout = timeout\n    req.open(method, endPoint)\n    req.onload = () => {\n      let response = this.parseJSON(req.responseText)\n      callback && callback(response)\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    // Work around bug in IE9 that requires an attached onprogress handler\n    req.onprogress = () => {}\n\n    req.send(body)\n  }\n\n  static xhrRequest(req, method, endPoint, accept, body, timeout, ontimeout, callback){\n    req.open(method, endPoint, true)\n    req.timeout = timeout\n    req.setRequestHeader(\"Content-Type\", accept)\n    req.onerror = () => { callback && callback(null) }\n    req.onreadystatechange = () => {\n      if(req.readyState === this.states.complete && callback){\n        let response = this.parseJSON(req.responseText)\n        callback(response)\n      }\n    }\n    if(ontimeout){ req.ontimeout = ontimeout }\n\n    req.send(body)\n  }\n\n  static parseJSON(resp){\n    if(!resp || resp === \"\"){ return null }\n\n    try {\n      return JSON.parse(resp)\n    } catch(e) {\n      console && console.log(\"failed to parse JSON response\", resp)\n      return null\n    }\n  }\n\n  static serialize(obj, parentKey){\n    let queryStr = [];\n    for(var key in obj){ if(!obj.hasOwnProperty(key)){ continue }\n      let paramKey = parentKey ? `${parentKey}[${key}]` : key\n      let paramVal = obj[key]\n      if(typeof paramVal === \"object\"){\n        queryStr.push(this.serialize(paramVal, paramKey))\n      } else {\n        queryStr.push(encodeURIComponent(paramKey) + \"=\" + encodeURIComponent(paramVal))\n      }\n    }\n    return queryStr.join(\"&\")\n  }\n\n  static appendParams(url, params){\n    if(Object.keys(params).length === 0){ return url }\n\n    let prefix = url.match(/\\?/) ? \"&\" : \"?\"\n    return `${url}${prefix}${this.serialize(params)}`\n  }\n}\n\nAjax.states = {complete: 4}\n\n\n\nexport var Presence = {\n\n  syncState(currentState, newState, onJoin, onLeave){\n    let state = this.clone(currentState)\n    let joins = {}\n    let leaves = {}\n\n    this.map(state, (key, presence) => {\n      if(!newState[key]){\n        leaves[key] = presence\n      }\n    })\n    this.map(newState, (key, newPresence) => {\n      let currentPresence = state[key]\n      if(currentPresence){\n        let newRefs = newPresence.metas.map(m => m.phx_ref)\n        let curRefs = currentPresence.metas.map(m => m.phx_ref)\n        let joinedMetas = newPresence.metas.filter(m => curRefs.indexOf(m.phx_ref) < 0)\n        let leftMetas = currentPresence.metas.filter(m => newRefs.indexOf(m.phx_ref) < 0)\n        if(joinedMetas.length > 0){\n          joins[key] = newPresence\n          joins[key].metas = joinedMetas\n        }\n        if(leftMetas.length > 0){\n          leaves[key] = this.clone(currentPresence)\n          leaves[key].metas = leftMetas\n        }\n      } else {\n        joins[key] = newPresence\n      }\n    })\n    return this.syncDiff(state, {joins: joins, leaves: leaves}, onJoin, onLeave)\n  },\n\n  syncDiff(currentState, {joins, leaves}, onJoin, onLeave){\n    let state = this.clone(currentState)\n    if(!onJoin){ onJoin = function(){} }\n    if(!onLeave){ onLeave = function(){} }\n\n    this.map(joins, (key, newPresence) => {\n      let currentPresence = state[key]\n      state[key] = newPresence\n      if(currentPresence){\n        state[key].metas.unshift(...currentPresence.metas)\n      }\n      onJoin(key, currentPresence, newPresence)\n    })\n    this.map(leaves, (key, leftPresence) => {\n      let currentPresence = state[key]\n      if(!currentPresence){ return }\n      let refsToRemove = leftPresence.metas.map(m => m.phx_ref)\n      currentPresence.metas = currentPresence.metas.filter(p => {\n        return refsToRemove.indexOf(p.phx_ref) < 0\n      })\n      onLeave(key, currentPresence, leftPresence)\n      if(currentPresence.metas.length === 0){\n        delete state[key]\n      }\n    })\n    return state\n  },\n\n  list(presences, chooser){\n    if(!chooser){ chooser = function(key, pres){ return pres } }\n\n    return this.map(presences, (key, presence) => {\n      return chooser(key, presence)\n    })\n  },\n\n  // private\n\n  map(obj, func){\n    return Object.getOwnPropertyNames(obj).map(key => func(key, obj[key]))\n  },\n\n  clone(obj){ return JSON.parse(JSON.stringify(obj)) }\n}\n\n\n/**\n *\n * Creates a timer that accepts a `timerCalc` function to perform\n * calculated timeout retries, such as exponential backoff.\n *\n * ## Examples\n *\n * ```javascript\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n * ```\n * @param {Function} callback\n * @param {Function} timerCalc\n */\nclass Timer {\n  constructor(callback, timerCalc){\n    this.callback  = callback\n    this.timerCalc = timerCalc\n    this.timer     = null\n    this.tries     = 0\n  }\n\n  reset(){\n    this.tries = 0\n    clearTimeout(this.timer)\n  }\n\n  /**\n   * Cancels any previous scheduleTimeout and schedules callback\n   */\n  scheduleTimeout(){\n    clearTimeout(this.timer)\n\n    this.timer = setTimeout(() => {\n      this.tries = this.tries + 1\n      this.callback()\n    }, this.timerCalc(this.tries + 1))\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/phoenix.js"],"sourceRoot":""}